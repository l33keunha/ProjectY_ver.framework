<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ybs.indicator.transfer.service.impl.TransferMapper">


	<!-- 환승 수단별통행 -->
	<select id ="selectTransferResultListMethod" parameterType="sVO" resultType="egovMap" fetchSize="1000">
	    SELECT 
			SDATE
			,OPRAT_DATE
			,ANAL_AREA_CD
			<if test="tm==null">
	            ,TFCMN
	            ,NVL(TM, '합계') TM
	        </if>
	        <if test="tm!=null">
	            ,NVL(TFCMN,'합계') TFCMN
	        </if>
			,CD_NO
			,SUM(USER_CNT_AGG) USER_CNT_AGG
		FROM 
			(
				SELECT 
					SDATE
					,OPRAT_DATE
					,ANAL_AREA_CD
					,CONCAT(TFCMN_START, CONCAT('-', TFCMN_END)) TFCMN 
		            <if test="tm==null">
		                ,TM
		            </if>
					,NVL(CD_NO, '합계') CD_NO
					,SUM(USER_CNT_AGG) USER_CNT_AGG
				FROM 환승_수단별통행
				WHERE 1=1
					AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
		            AND ANAL_AREA_CD = #{anal_area_cd}
		            AND PROVIDER = #{provider}
		            <if test="tm==null">
		                AND TM BETWEEN #{tmStart} AND #{tmEnd}
		            </if>
		            <if test="!cd_no[0].equals('00')">
		                AND CD_NO IN
		                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
		                    #{arr}
		                </foreach>
		            </if>
				GROUP BY 	SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
							,CONCAT(TFCMN_START, CONCAT('-', TFCMN_END)) 
		                    <if test="tm==null">
		                        ,TM
		                    </if>
							,ROLLUP(CD_NO)
			)
		GROUP BY 	SDATE
					,OPRAT_DATE
					,ANAL_AREA_CD
					,CD_NO
					<if test="tm==null">
				    ,TFCMN
		            ,ROLLUP(TM)
		            ORDER BY SDATE, TFCMN, TM, CD_NO
		            </if>
		            <if test="tm!=null">
		                ,ROLLUP(TFCMN)
		                ORDER BY SDATE, TFCMN, CD_NO
		            </if> 
	</select>
		
		
		
		
		
    <!-- 환승 정류장별통행 버스 -->
	<select id ="selectTransferResultListStationB" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 
            OPRAT_DATE
			,TO_CHAR(SDATE, 'DY') DY
            ,TFCMN
            ,STTN_ID
            ,STTN_NMA
            ,STTN_HJD
            ,NVL(CD_NO,'합계') CD_NO
            ,SUM(USER_CNT_AGG) USER_CNT_AGG
        FROM 환승_정류장별통행_일별
        WHERE 1=1
            AND SDATE = TO_DATE(#{dateStart}, 'YYYY-MM-DD')
            AND PART_KEY = #{provider} || '_' || #{anal_area_cd}
            <if test="!cd_no[0].equals('00')">
                AND CD_NO IN
                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                    #{arr}
                </foreach>
            </if>
            AND TFCMN ='B'
        GROUP BY             
        	OPRAT_DATE
			,TO_CHAR(SDATE, 'DY')
            ,TFCMN
            ,STTN_ID
            ,STTN_NMA
            ,STTN_HJD
            ,CUBE(CD_NO)
        ORDER BY STTN_NMA, STTN_ID, CD_NO
	</select>

    <!-- 환승 정류장별통행 지하철 -->
	<select id ="selectTransferResultListStationT" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 
            OPRAT_DATE
			,TO_CHAR(SDATE, 'DY') DY
            ,TFCMN
            ,STTN_ID
            ,STTN_NMA
            ,STTN_HJD
            ,NVL(CD_NO,'합계') CD_NO
            ,SUM(USER_CNT_AGG) USER_CNT_AGG
        FROM 환승_정류장별통행_일별
        WHERE 1=1
            AND SDATE = TO_DATE(#{dateStart}, 'YYYY-MM-DD')
            AND PART_KEY = #{provider} || '_' || #{anal_area_cd}
            <if test="!cd_no[0].equals('00')">
                AND CD_NO IN
                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                    #{arr}
                </foreach>
            </if>
            AND TFCMN ='T'
        GROUP BY             
        	OPRAT_DATE
			,TO_CHAR(SDATE, 'DY')
            ,TFCMN
            ,STTN_ID
            ,STTN_NMA
            ,STTN_HJD
            ,CUBE(CD_NO)
        ORDER BY STTN_NMA, STTN_ID, CD_NO
	</select>
	
	<!-- 환승 노선별통행 버스 -->
	<select id ="selectTransferResultListRouteB" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 
            OPRAT_DATE
			,TO_CHAR(SDATE, 'DY') DY
            ,ANAL_AREA_CD
            ,TFCMN
            ,ROUTE_ID
            ,ROUTE_NMA
            ,ROUTE_TYPE
            ,ROUTE_START
            ,ROUTE_END
            ,NVL(TM,'합계') TM
            ,NVL(CD_NO, '합계') CD_NO
            ,SUM(USER_CNT_AGG) USER_CNT_AGG
        FROM 환승_노선별통행
        WHERE 1=1
            AND SDATE = TO_DATE(#{dateStart}, 'YYYY-MM-DD')
            AND PART_KEY = #{provider} || '_' || #{anal_area_cd}
            <if test="tm==null">
                AND TM BETWEEN #{tmStart} AND #{tmEnd}
            </if>
            <if test="!cd_no[0].equals('00')">
                AND CD_NO IN
                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                    #{arr}
                </foreach>
            </if>
        AND TFCMN = 'B'
        GROUP BY OPRAT_DATE
				,TO_CHAR(SDATE, 'DY')
                ,ANAL_AREA_CD
                ,TFCMN
                ,ROUTE_ID
                ,ROUTE_NMA
                ,ROUTE_TYPE
                ,ROUTE_START
                ,ROUTE_END
                ,CUBE(TM, CD_NO)
        ORDER BY ROUTE_NMA, ROUTE_ID, TM, CD_NO
	</select>

    <!-- 환승 노선별통행 지하철 -->
	<select id ="selectTransferResultListRouteT" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 
            OPRAT_DATE
			,TO_CHAR(SDATE, 'DY') DY
            ,ANAL_AREA_CD
            ,TFCMN
            ,ROUTE_ID
            ,ROUTE_NMA
            ,ROUTE_TYPE
            ,ROUTE_START
            ,ROUTE_END
            ,NVL(TM,'합계') TM
            ,NVL(CD_NO, '합계') CD_NO
            ,SUM(USER_CNT_AGG) USER_CNT_AGG
        FROM 환승_노선별통행
        WHERE 1=1
            AND SDATE = TO_DATE(#{dateStart}, 'YYYY-MM-DD')
            AND PART_KEY = #{provider} || '_' || #{anal_area_cd}
            <if test="tm==null">
                AND TM BETWEEN #{tmStart} AND #{tmEnd}
            </if>
            <if test="!cd_no[0].equals('00')">
                AND CD_NO IN
                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                    #{arr}
                </foreach>
            </if>
        AND TFCMN = 'T'
        GROUP BY OPRAT_DATE
				,TO_CHAR(SDATE, 'DY')		
                ,ANAL_AREA_CD
                ,TFCMN
                ,ROUTE_ID
                ,ROUTE_NMA
                ,ROUTE_TYPE
                ,ROUTE_START
                ,ROUTE_END
                ,CUBE(TM, CD_NO)
        ORDER BY ROUTE_NMA, ROUTE_ID, TM, CD_NO
	</select>
	
	<!-- 환승 노선별통행  버스 일별 -->
	<select id ="selectTransferResultListRouteB_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 
            OPRAT_DATE
			,TO_CHAR(SDATE, 'DY') DY
            ,ANAL_AREA_CD
            ,TFCMN
            ,ROUTE_ID
            ,ROUTE_NMA
            ,ROUTE_TYPE
            ,ROUTE_START
            ,ROUTE_END
            ,NVL(CD_NO, '합계') CD_NO
            ,SUM(USER_CNT_AGG) USER_CNT_AGG
        FROM 환승_노선별통행_일별
        WHERE 1=1
            AND SDATE = TO_DATE(#{dateStart}, 'YYYY-MM-DD')
            AND PART_KEY = #{provider} || '_' || #{anal_area_cd}
            <if test="!cd_no[0].equals('00')">
                AND CD_NO IN
                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                    #{arr}
                </foreach>
            </if>
            AND TFCMN ='B'
        GROUP BY
                OPRAT_DATE
				,TO_CHAR(SDATE, 'DY')
                ,ANAL_AREA_CD
                ,TFCMN
                ,ROUTE_ID
                ,ROUTE_NMA
                ,ROUTE_TYPE
                ,ROUTE_START
                ,ROUTE_END
                ,ROLLUP(CD_NO)
        ORDER BY ROUTE_NMA, ROUTE_ID, CD_NO
	</select>

    <!-- 환승 노선별통행 지하철 일별 -->
	<select id ="selectTransferResultListRouteT_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 
            OPRAT_DATE
			,TO_CHAR(SDATE, 'DY') DY
            ,ANAL_AREA_CD
            ,TFCMN
            ,ROUTE_ID
            ,ROUTE_NMA
            ,ROUTE_TYPE
            ,ROUTE_START
            ,ROUTE_END
            ,NVL(CD_NO, '합계') CD_NO
            ,SUM(USER_CNT_AGG) USER_CNT_AGG
        FROM 환승_노선별통행_일별
        WHERE 1=1
            AND SDATE = TO_DATE(#{dateStart}, 'YYYY-MM-DD')
            AND PART_KEY = #{provider} || '_' || #{anal_area_cd}
            <if test="!cd_no[0].equals('00')">
                AND CD_NO IN
                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                    #{arr}
                </foreach>
            </if>
            AND TFCMN ='T'
        GROUP BY
                OPRAT_DATE
				,TO_CHAR(SDATE, 'DY')
                ,ANAL_AREA_CD
                ,TFCMN
                ,ROUTE_ID
                ,ROUTE_NMA
                ,ROUTE_TYPE
                ,ROUTE_START
                ,ROUTE_END
                ,ROLLUP(CD_NO)
        ORDER BY ROUTE_NMA, ROUTE_ID, CD_NO
	</select>
	
	
	
	
	
	
	<!-- 환승 횟수별통행 -->
	<select id ="selectTransferResultListNum" parameterType="sVO" resultType="egovMap" fetchSize="1000">
	    SELECT 
	            SDATE
	            ,OPRAT_DATE
				,TO_CHAR(SDATE, 'DY') DY
	            ,ANAL_AREA_CD
	            ,TRANSFER_NUM
	            ,NVL(TM,'합계') TM
	            ,NVL(CD_NO,'합계') CD_NO
	            ,SUM(USER_CNT_AGG) USER_CNT_AGG
	    FROM 환승_횟수별통행
	    WHERE 1=1
	        AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	        AND ANAL_AREA_CD = #{anal_area_cd}
	        AND PROVIDER = #{provider}
	        <if test="tm==null">
	            AND TM BETWEEN #{tmStart} AND #{tmEnd}
	        </if>
	        <if test="!cd_no[0].equals('00')">
	            AND CD_NO IN
	            <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
	                #{arr}
	            </foreach>
	        </if>
	    GROUP BY SDATE
	            ,OPRAT_DATE
				,TO_CHAR(SDATE, 'DY')
	            ,ANAL_AREA_CD
	            ,TRANSFER_NUM
	            ,CUBE (TM,CD_NO)
	    ORDER BY SDATE, TRANSFER_NUM, TM, CD_NO
	</select>
	
	<!-- 환승 횟수별통행 일별 -->
	<select id ="selectTransferResultListNum_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
	    SELECT 
	            SDATE
	            ,OPRAT_DATE
				,TO_CHAR(SDATE, 'DY') DY
	            ,ANAL_AREA_CD
	            ,TRANSFER_NUM
	            ,NVL(CD_NO,'합계') CD_NO
	            ,SUM(USER_CNT_AGG) USER_CNT_AGG
	    FROM 환승_횟수별통행
	    WHERE 1=1
	        AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	        AND ANAL_AREA_CD = #{anal_area_cd}
	        AND PROVIDER = #{provider}
	        <if test="!cd_no[0].equals('00')">
	            AND CD_NO IN
	            <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
	                #{arr}
	            </foreach>
	        </if>
	    GROUP BY SDATE
	            ,OPRAT_DATE
				,TO_CHAR(SDATE, 'DY')
	            ,ANAL_AREA_CD
	            ,TRANSFER_NUM
	            ,ROLLUP (CD_NO)
	    ORDER BY SDATE, TRANSFER_NUM, CD_NO
	</select>
	
	<!-- 환승 수단별 환승통행시간 --> 
	<select id ="selectTransferResultListTimeMethod" parameterType="sVO" resultType="egovMap" fetchSize="1000">
		SELECT SDATE
				,OPRAT_DATE
				,ANAL_AREA_CD
		        <if test="tm==null">
		            ,TFCMN
		            ,NVL(TM, '평균') TM
		        </if>
		        <if test="tm!=null">
		            ,NVL(TFCMN,'평균') TFCMN
		        </if>
				,CD_NO
				,NVL(ROUND(AVG(USER_TIME_AVG),1),0) USER_TIME_AVG 
		FROM
			(
				SELECT 
					SDATE
					,OPRAT_DATE
					,ANAL_AREA_CD
					,CONCAT(TFCMN_START, CONCAT('-',TFCMN_END)) TFCMN
		            <if test="tm==null">
		                ,TM
		            </if>
					,NVL(CD_NO,'평균') CD_NO
					,ROUND(AVG(CASE WHEN USER_TIME_AVG = 0 THEN NULL ELSE USER_TIME_AVG END),1) USER_TIME_AVG 
				FROM 환승_수단별_환승통행시간
				WHERE 1=1
		            AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
		            AND ANAL_AREA_CD = #{anal_area_cd}
		            AND PROVIDER = #{provider}
		            <if test="tm==null">
		                AND TM BETWEEN #{tmStart} AND #{tmEnd}
		            </if>
		            <if test="!cd_no[0].equals('00')">
		                AND CD_NO IN
		                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
		                    #{arr}
		                </foreach>
		            </if>
				GROUP BY 	SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
							,CONCAT(TFCMN_START, CONCAT('-',TFCMN_END))
		                    <if test="tm==null">
		                        ,TM
		                    </if>
							,ROLLUP(CD_NO)
			)
		GROUP BY SDATE
				,OPRAT_DATE
				,ANAL_AREA_CD
				,CD_NO
		        <if test="tm==null">
				    ,TFCMN
		            ,ROLLUP(TM)
		            ORDER BY SDATE, TFCMN, TM, CD_NO
		        </if>
		        <if test="tm!=null">
				    ,ROLLUP(TFCMN)
		            ORDER BY SDATE, TFCMN, CD_NO
		        </if>
	</select>
	
	<!-- 환승 횟수별 환승통행시간 -->
	<select id ="selectTransferResultListTimeNum" parameterType="sVO" resultType="egovMap" fetchSize="1000">
	    SELECT 
	            SDATE
	            ,OPRAT_DATE
				,DY
	            ,ANAL_AREA_CD
	            ,TRANSFER_NUM
	            ,NVL(TM,'평균') TM
	            ,NVL(CD_NO,'평균') CD_NO
	            ,NVL(ROUND(AVG(USER_TIME_AVG), 1), 0) USER_TIME_AVG
	    FROM
	        (
	            SELECT 
	                SDATE
	                ,OPRAT_DATE
					,TO_CHAR(SDATE, 'DY') DY
	                ,ANAL_AREA_CD
	                ,TRANSFER_NUM
	                ,TM
	                ,CD_NO
	                ,CASE WHEN USER_TIME_AVG = 0 THEN NULL ELSE USER_TIME_AVG END USER_TIME_AVG
	            FROM 환승_횟수별_환승통행시간
	            WHERE 1=1
	                AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	                AND ANAL_AREA_CD = #{anal_area_cd}
	                AND PROVIDER = #{provider}
	                <if test="tm==null">
	                    AND TM BETWEEN #{tmStart} AND #{tmEnd}
	                </if>
	                <if test="!cd_no[0].equals('00')">
	                    AND CD_NO IN
	                    <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
	                        #{arr}
	                    </foreach>
	                </if>
	        )
	    GROUP BY SDATE
	            ,OPRAT_DATE
				,DY
	            ,ANAL_AREA_CD
	            ,TRANSFER_NUM
	            ,CUBE(TM, CD_NO)
	    ORDER BY  SDATE, TRANSFER_NUM, TM, CD_NO
	</select>
	
	<!-- 환승 횟수별 환승통행시간 일별-->
	<select id ="selectTransferResultListTimeNum_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
	    SELECT 
	        SDATE
	        ,OPRAT_DATE
			,DY
	        ,ANAL_AREA_CD
	        ,TRANSFER_NUM
	        ,NVL(CD_NO,'평균') CD_NO
	        ,NVL(ROUND(AVG(USER_TIME_AVG), 1), 0) USER_TIME_AVG
	    FROM
	        (
				SELECT 
				SDATE
				,OPRAT_DATE
				,DY
				,ANAL_AREA_CD
				,TRANSFER_NUM
				,CD_NO
				,ROUND(AVG(USER_TIME_AVG), 1) USER_TIME_AVG
				FROM
					(
						SELECT 
							SDATE
							,OPRAT_DATE
							,TO_CHAR(SDATE, 'DY') DY
							,ANAL_AREA_CD
							,TRANSFER_NUM
							,CD_NO
							,CASE WHEN USER_TIME_AVG = 0 THEN NULL ELSE USER_TIME_AVG END USER_TIME_AVG
						FROM 환승_횟수별_환승통행시간
						WHERE 1=1
							AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
							AND ANAL_AREA_CD = #{anal_area_cd}
							AND PROVIDER = #{provider}
							<if test="!cd_no[0].equals('00')">
								AND CD_NO IN
								<foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
									#{arr}
								</foreach>
							</if>
					)
				GROUP BY SDATE
						,OPRAT_DATE
						,DY
						,ANAL_AREA_CD
						,TRANSFER_NUM
						,CD_NO
			)
		GROUP BY SDATE
	            ,OPRAT_DATE
				,DY
	            ,ANAL_AREA_CD
	            ,TRANSFER_NUM
	            ,ROLLUP(CD_NO)
	    ORDER BY  SDATE, TRANSFER_NUM, CD_NO
	</select>
	
	<!-- 환승 수단별 환승통행거리 -->
	<select id ="selectTransferResultListDistnMethod" parameterType="sVO" resultType="egovMap" fetchSize="1000">
	    SELECT SDATE
				,OPRAT_DATE
				,ANAL_AREA_CD
		        <if test="tm==null">
		            ,TFCMN
		            ,NVL(TM, '평균') TM
		        </if>
		        <if test="tm!=null">
		            ,NVL(TFCMN,'평균') TFCMN
		        </if>
				,CD_NO
				,NVL(ROUND(AVG(USER_DISTN_AVG),1),0) USER_DISTN_AVG 
		FROM
			(
				SELECT 
					SDATE
					,OPRAT_DATE
					,ANAL_AREA_CD
					,CONCAT(TFCMN_START, CONCAT('-',TFCMN_END)) TFCMN
		            <if test="tm==null">
		                ,TM
		            </if>
					,NVL(CD_NO,'평균') CD_NO
					,ROUND(AVG(CASE WHEN USER_DISTN_AVG = 0 THEN NULL ELSE USER_DISTN_AVG END),1) USER_DISTN_AVG 
				FROM 환승_수단별_환승통행거리
				WHERE 1=1
		            AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
		            AND ANAL_AREA_CD = #{anal_area_cd}
		            AND PROVIDER = #{provider}
		            <if test="tm==null">
		                AND TM BETWEEN #{tmStart} AND #{tmEnd}
		            </if>
		            <if test="!cd_no[0].equals('00')">
		                AND CD_NO IN
		                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
		                    #{arr}
		                </foreach>
		            </if>
				GROUP BY 	SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
							,CONCAT(TFCMN_START, CONCAT('-',TFCMN_END))
		                    <if test="tm==null">
		                        ,TM
		                    </if>
							,ROLLUP(CD_NO)
			)
		GROUP BY SDATE
				,OPRAT_DATE
				,ANAL_AREA_CD
				,CD_NO
		        <if test="tm==null">
				    ,TFCMN
		            ,ROLLUP(TM)
		            ORDER BY SDATE, TFCMN, TM, CD_NO
		        </if>
		        <if test="tm!=null">
				    ,ROLLUP(TFCMN)
		            ORDER BY SDATE, TFCMN, CD_NO
		        </if>
	</select>
	
	<!-- 환승 횟수별 환승통행거리 -->
	<select id ="selectTransferResultListDistnNum" parameterType="sVO" resultType="egovMap" fetchSize="1000">
	    SELECT 
	        SDATE
	        ,OPRAT_DATE
			,DY
	        ,ANAL_AREA_CD
	        ,TRANSFER_NUM
	        ,NVL(TM,'평균') TM
	        ,NVL(CD_NO,'평균') CD_NO
	        ,NVL(ROUND(AVG(USER_DISTN_AVG), 1), 0) USER_DISTN_AVG
	    FROM
	        (
	            SELECT 
	                SDATE
	                ,OPRAT_DATE
					,TO_CHAR(SDATE, 'DY') DY
	                ,ANAL_AREA_CD
	                ,TRANSFER_NUM
	                ,TM
	                ,CD_NO
	                ,CASE WHEN USER_DISTN_AVG = 0 THEN NULL ELSE USER_DISTN_AVG END USER_DISTN_AVG
	            FROM 환승_횟수별_환승통행거리
	            WHERE 1=1
	                AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	                AND ANAL_AREA_CD = #{anal_area_cd}
	                AND PROVIDER = #{provider}
	                <if test="tm==null">
	                    AND TM BETWEEN #{tmStart} AND #{tmEnd}
	                </if>
	                <if test="!cd_no[0].equals('00')">
	                    AND CD_NO IN
	                    <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
	                        #{arr}
	                    </foreach>
	                </if>
	        )
	    GROUP BY SDATE
	            ,OPRAT_DATE
				,DY
	            ,ANAL_AREA_CD
	            ,TRANSFER_NUM
	            ,CUBE(TM, CD_NO)
	    ORDER BY  SDATE, TRANSFER_NUM, TM, CD_NO
	</select>
	
	<!-- 환승 횟수별 환승통행거리 일별-->
	<select id ="selectTransferResultListDistnNum_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
	    SELECT
			SDATE
			,OPRAT_DATE
			,TO_CHAR(SDATE, 'DY') DY
			,ANAL_AREA_CD
			,TRANSFER_NUM
			,NVL(CD_NO,'평균') CD_NO
			,NVL(ROUND(AVG(USER_DISTN_AVG), 1), 0) USER_DISTN_AVG
		FROM
			(
				SELECT 
					SDATE
					,OPRAT_DATE
					,ANAL_AREA_CD
					,TRANSFER_NUM
					,CD_NO
					,ROUND(AVG(USER_DISTN_AVG), 1) USER_DISTN_AVG
				FROM
					(
						SELECT 
							SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
							,TRANSFER_NUM
							,CD_NO
							,CASE WHEN USER_DISTN_AVG = 0 THEN NULL ELSE USER_DISTN_AVG END USER_DISTN_AVG
						FROM 환승_횟수별_환승통행거리
						WHERE 1=1
							AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
							AND ANAL_AREA_CD = #{anal_area_cd}
							AND PROVIDER = #{provider}
							<if test="!cd_no[0].equals('00')">
								AND CD_NO IN
								<foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
									#{arr}
								</foreach>
							</if>
					)
				GROUP BY SDATE
						,OPRAT_DATE
						,ANAL_AREA_CD
						,TRANSFER_NUM
						,CD_NO
			)
		GROUP BY SDATE
				,OPRAT_DATE
				,TO_CHAR(SDATE, 'DY')
				,ANAL_AREA_CD
				,TRANSFER_NUM
				,ROLLUP(CD_NO)
		ORDER BY  SDATE, TRANSFER_NUM, CD_NO
	</select>
		
	
	
	
	
	<!-- /********************** 화면용 다운로드 **********************/ -->
	
	
	
	
	<!-- PIVOT 환승 수단별통행 -->
	<select id ="downloadTransferResultListMethod" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 	
            (
             	SELECT 
	             	#{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
					,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
					,#{provider_text} PROVIDER
					,TO_CHAR(SDATE, 'DY') DY
					,SDATE
					,OPRAT_DATE
					,ANAL_AREA_CD
					<if test="tm==null">
			            ,TFCMN
			            ,NVL(TM, '합계') TM
			        </if>
			        <if test="tm!=null">
			            ,NVL(TFCMN,'합계') TFCMN
			        </if>
					,CD_NO
					,SUM(USER_CNT_AGG) USER_CNT_AGG
				FROM 
					(
						SELECT 
							SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
							,CONCAT(TFCMN_START, CONCAT('-', TFCMN_END)) TFCMN 
				            <if test="tm==null">
				                ,TM
				            </if>
							,NVL(CD_NO, '합계') CD_NO
							,SUM(USER_CNT_AGG) USER_CNT_AGG
						FROM 환승_수단별통행
						WHERE 1=1
							AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
				            AND ANAL_AREA_CD = #{anal_area_cd}
				            AND PROVIDER = #{provider}
				            <if test="tm==null">
				                AND TM BETWEEN #{tmStart} AND #{tmEnd}
				            </if>
				            <if test="!cd_no[0].equals('00')">
				                AND CD_NO IN
				                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
				                    #{arr}
				                </foreach>
				            </if>
						GROUP BY 	SDATE
									,OPRAT_DATE
									,ANAL_AREA_CD
									,CONCAT(TFCMN_START, CONCAT('-', TFCMN_END)) 
				                    <if test="tm==null">
				                        ,TM
				                    </if>
									,ROLLUP(CD_NO)
					)
				GROUP BY 	
							TO_CHAR(SDATE, 'DY')
							,SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
							,CD_NO
							<if test="tm==null">
						    ,TFCMN
				            ,ROLLUP(TM)
				            ORDER BY SDATE, TFCMN, TM, CD_NO
				            </if>
				            <if test="tm!=null">
				                ,ROLLUP(TFCMN)
				                ORDER BY SDATE, TFCMN, CD_NO
				            </if> 
            )
        PIVOT
            (
                SUM(USER_CNT_AGG) 
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '합계' 합계)
            )
        <if test="tm.equals('')">
        	ORDER BY  OPRAT_DATE, TFCMN, TM
        </if>
        <if test="!tm.equals('')">
        	ORDER BY  OPRAT_DATE, TFCMN
        </if>
	</select>
	
	<!-- PIVOT 환승 수단별통행 일별 -->
	<select id ="downloadTransferResultListMethod_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 	
            (
                SELECT 
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,OPRAT_DATE
                    ,DY
                    ,CONCAT(TFCMN_START ,CONCAT('_',TFCMN_END)) TFCMN
                    ,NVL(CD_NO,'합계') CD_NO
                    ,SUM(USER_CNT_AGG) USER_CNT_AGG
            FROM
                (		
                    SELECT 
                        SDATE
                        ,OPRAT_DATE
                        ,ANAL_AREA_CD
                        ,TO_CHAR(SDATE, 'DY') DY
                        ,CASE WHEN TFCMN_START ='B' THEN '버스' ELSE '지하철' END TFCMN_START
                        ,CASE WHEN TFCMN_END ='B' THEN '버스' ELSE '지하철' END TFCMN_END
                        ,TM
                        ,CD_NO
                        ,USER_CNT_AGG
                        ,PROVIDER 
                    FROM 환승_수단별통행
                    WHERE 1=1
                        AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                        AND ANAL_AREA_CD = #{anal_area_cd}
                        AND PROVIDER = #{provider}
                        <if test="!cd_no[0].equals('00')">
                            AND CD_NO IN
                            <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                #{arr}
                            </foreach>
                        </if>
                )
            GROUP BY 
                    OPRAT_DATE
                    ,DY
                    ,CONCAT(TFCMN_START ,CONCAT('_',TFCMN_END))
                    ,ROLLUP (CD_NO)
            )
        PIVOT
            (
                SUM(USER_CNT_AGG) 
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '합계' 합계)
            )
        ORDER BY  OPRAT_DATE, DECODE(TFCMN, '버스_버스','1', '버스_지하철','2' ,'지하철_지하철','3', '지하철_버스','4')
	</select>
	
	<!-- PIVOT 환승 정류장별통행 -->
	<select id ="downloadTransferResultListStation" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM
            (
                SELECT 
                        #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                        ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                        ,#{provider_text} PROVIDER
                        ,OPRAT_DATE
                        ,TO_CHAR(SDATE,'DY') DY
                        ,CASE WHEN TFCMN = 'B' THEN '버스' ELSE  '지하철' END TFCMN
                        ,STTN_ID
                        ,STTN_NMA
                        ,STTN_HJD
                        ,NVL(CD_NO,'합계') CD_NO
                        ,SUM(USER_CNT_AGG) USER_CNT_AGG
                FROM 환승_정류장별통행_일별
                WHERE 1=1
                    AND SDATE = TO_DATE(#{dateStart}, 'YYYY-MM-DD')
                    AND PART_KEY = #{provider} || '_' || #{anal_area_cd}
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY OPRAT_DATE
                        ,TO_CHAR(SDATE,'DY')
                        ,TFCMN
                        ,STTN_ID
                        ,STTN_NMA
                        ,STTN_HJD
                        ,ROLLUP(CD_NO)
            )
        PIVOT
            (
                SUM(USER_CNT_AGG)
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                ,'09' 대학생 , '10' 복지 , '11' 기타, '합계' 합계)
            )
        ORDER BY TFCMN, STTN_NMA, STTN_ID
	</select>
	
	<!-- PIVOT 환승 노선별통행 -->
	<select id ="downloadTransferResultListRoute" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE,'DY') DY
                    ,CASE WHEN TFCMN = 'B' THEN '버스' ELSE  '지하철' END TFCMN
                    ,ROUTE_ID
                    ,ROUTE_NMA
                    ,ROUTE_TYPE
                    ,ROUTE_START
                    ,ROUTE_END
                    ,NVL(TM,'합계') TM
                    ,NVL(CD_NO, '합계') CD_NO
                    ,SUM(USER_CNT_AGG) USER_CNT_AGG
                FROM 환승_노선별통행
                WHERE 1=1
                    AND SDATE = TO_DATE(#{dateStart}, 'YYYY-MM-DD')
                    AND PART_KEY = #{provider} || '_' || #{anal_area_cd}
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY OPRAT_DATE
                        ,TO_CHAR(SDATE,'DY')
                        ,TFCMN
                        ,ROUTE_ID
                        ,ROUTE_NMA
                        ,ROUTE_TYPE
                        ,ROUTE_START
                        ,ROUTE_END
                        ,CUBE(TM, CD_NO)
            )
        PIVOT
            (
                SUM(USER_CNT_AGG)
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                ,'09' 대학생 , '10' 복지 , '11' 기타, '합계' 합계)
            )
        ORDER BY TFCMN, ROUTE_NMA, ROUTE_ID, TM
	</select>
	
	<!-- PIVOT 환승 노선별통행 일별 -->
	<select id ="downloadTransferResultListRoute_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE,'DY') DY
                    ,CASE WHEN TFCMN = 'B' THEN '버스' ELSE  '지하철' END TFCMN
                    ,ROUTE_ID
                    ,ROUTE_NMA
                    ,ROUTE_TYPE
                    ,ROUTE_START
                    ,ROUTE_END
                    ,NVL(CD_NO, '합계') CD_NO
                    ,SUM(USER_CNT_AGG) USER_CNT_AGG
                FROM 환승_노선별통행_일별
                WHERE 1=1
                    AND SDATE = TO_DATE(#{dateStart}, 'YYYY-MM-DD')
                    AND PART_KEY = #{provider} || '_' || #{anal_area_cd}
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY OPRAT_DATE
                        ,TO_CHAR(SDATE,'DY')
                        ,TFCMN
                        ,ROUTE_ID
                        ,ROUTE_NMA
                        ,ROUTE_TYPE
                        ,ROUTE_START
                        ,ROUTE_END
                        ,ROLLUP(CD_NO)
            )
        PIVOT
            (
                SUM(USER_CNT_AGG)
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                ,'09' 대학생 , '10' 복지 , '11' 기타, '합계' 합계)
            )
        ORDER BY TFCMN, ROUTE_NMA, ROUTE_ID
	</select>
	
	<!-- PIVOT 환승 횟수별통행 -->
	<select id ="downloadTransferResultListNum" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 	
            (
                SELECT 
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE, 'DY') DY
                    ,TRANSFER_NUM
                    ,NVL(TM,'합계') TM
                    ,NVL(CD_NO,'합계') CD_NO
                    ,SUM(USER_CNT_AGG) USER_CNT_AGG
            FROM 환승_횟수별통행
            WHERE 1=1
                AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                AND ANAL_AREA_CD = #{anal_area_cd}
                AND PROVIDER = #{provider}
                <if test="tm==null || tm.equals('')">
                    AND TM BETWEEN #{tmStart} AND #{tmEnd}
                </if>
                <if test="!cd_no[0].equals('00')">
                    AND CD_NO IN
                    <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                        #{arr}
                    </foreach>
                </if>
            GROUP BY 
                    OPRAT_DATE
                    ,TO_CHAR(SDATE, 'DY')
                    ,TRANSFER_NUM
                    ,CUBE (TM,CD_NO)
            )
        PIVOT
            (
                SUM(USER_CNT_AGG) 
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '합계' 합계)
            )
        ORDER BY OPRAT_DATE, TRANSFER_NUM, TM
	</select>
	
	<!-- PIVOT 환승 횟수별통행 일별 -->
	<select id ="downloadTransferResultListNum_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
	SELECT *
        FROM 	
            (
                SELECT 
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE, 'DY') DY
                    ,TRANSFER_NUM
                    ,NVL(CD_NO,'합계') CD_NO
                    ,SUM(USER_CNT_AGG) USER_CNT_AGG
            FROM 환승_횟수별통행
            WHERE 1=1
                AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                AND ANAL_AREA_CD = #{anal_area_cd}
                AND PROVIDER = #{provider}
                <if test="!cd_no[0].equals('00')">
                    AND CD_NO IN
                    <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                        #{arr}
                    </foreach>
                </if>
            GROUP BY 
                    OPRAT_DATE
                    ,TO_CHAR(SDATE, 'DY') 
                    ,TRANSFER_NUM
                    ,ROLLUP (CD_NO)
            )
        PIVOT
            (
                SUM(USER_CNT_AGG) 
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '합계' 합계)
            )
        ORDER BY OPRAT_DATE, TRANSFER_NUM
	</select>
	
	<!-- PIVOT 환승 수단별 환승통행시간 -->
	<select id ="downloadTransferResultListTimeMethod" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 	
            (
                SELECT 	
                		#{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
						,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
						,#{provider_text} PROVIDER
						,TO_CHAR(SDATE, 'DY') DY
                		,SDATE
						,OPRAT_DATE
						,ANAL_AREA_CD
				        <if test="tm.equals('')">
				            ,TFCMN
				            ,NVL(TM, '평균') TM
				        </if>
				        <if test="!tm.equals('')">
				            ,NVL(TFCMN,'평균') TFCMN
				        </if>
						,CD_NO
						,NVL(ROUND(AVG(USER_TIME_AVG),1),0) USER_TIME_AVG 
				FROM
					(
						SELECT 
							SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
							,CONCAT(TFCMN_START, CONCAT('-',TFCMN_END)) TFCMN
				            <if test="tm.equals('')">
				                ,TM
				            </if>
							,NVL(CD_NO,'평균') CD_NO
							,ROUND(AVG(CASE WHEN USER_TIME_AVG = 0 THEN NULL ELSE USER_TIME_AVG END),1) USER_TIME_AVG 
						FROM 환승_수단별_환승통행시간
						WHERE 1=1
				            AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
				            AND ANAL_AREA_CD = #{anal_area_cd}
				            AND PROVIDER = #{provider}
				            <if test="tm.equals('')">
				                AND TM BETWEEN #{tmStart} AND #{tmEnd}
				            </if>
				            <if test="!cd_no[0].equals('00')">
				                AND CD_NO IN
				                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
				                    #{arr}
				                </foreach>
				            </if>
						GROUP BY 	SDATE
									,OPRAT_DATE
									,ANAL_AREA_CD
									,CONCAT(TFCMN_START, CONCAT('-',TFCMN_END))
				                   <if test="tm.equals('')">
				                        ,TM
				                    </if>
									,ROLLUP(CD_NO)
					)
				GROUP BY 
						TO_CHAR(SDATE, 'DY')
						,SDATE
						,OPRAT_DATE
						,ANAL_AREA_CD
						,CD_NO
				        <if test="tm.equals('')">
						    ,TFCMN
				            ,ROLLUP(TM)
				            ORDER BY SDATE, TFCMN, TM, CD_NO
				        </if>
				        <if test="!tm.equals('')">
						    ,ROLLUP(TFCMN)
				            ORDER BY SDATE, TFCMN, CD_NO
				        </if>
            )
        PIVOT
            (
                SUM(USER_TIME_AVG)
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        <if test="tm.equals('')">
        	ORDER BY  OPRAT_DATE, TFCMN, TM
        </if>
        <if test="!tm.equals('')">
        	ORDER BY  OPRAT_DATE, TFCMN
        </if>
	</select>
	
	<!-- PIVOT 환승 횟수별 환승통행시간 -->
	<select id ="downloadTransferResultListTimeNum" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 	
            (
               SELECT 
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,OPRAT_DATE
                    ,DY
                    ,TRANSFER_NUM
                    ,NVL(TM,'평균') TM
                    ,NVL(CD_NO,'평균') CD_NO
                    ,NVL(ROUND(AVG(USER_TIME_AVG), 1), 0) USER_TIME_AVG
            FROM
                (
                    SELECT 
                        SDATE
                        ,OPRAT_DATE
                        ,ANAL_AREA_CD
                        ,TO_CHAR(SDATE,'DY') DY
                        ,TRANSFER_NUM
                        ,TM
                        ,CD_NO
                        ,CASE WHEN USER_TIME_AVG = 0 THEN NULL ELSE USER_TIME_AVG END USER_TIME_AVG
                    FROM 환승_횟수별_환승통행시간
                    WHERE 1=1
                        AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                        AND ANAL_AREA_CD = #{anal_area_cd}
                        AND PROVIDER = #{provider}
                        <if test="tm==null || tm.equals('')">
                            AND TM BETWEEN #{tmStart} AND #{tmEnd}
                        </if>
                        <if test="!cd_no[0].equals('00')">
                            AND CD_NO IN
                            <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                #{arr}
                            </foreach>
                        </if>
                )
                GROUP BY 
                        OPRAT_DATE
                        ,ANAL_AREA_CD
                        ,DY
                        ,TRANSFER_NUM
                        ,CUBE(TM, CD_NO)
                ORDER BY  SDATE, TRANSFER_NUM, TM, CD_NO
            )
        PIVOT
            (
                SUM(USER_TIME_AVG)
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY  OPRAT_DATE, TRANSFER_NUM, TM
	</select>
	
	<!-- PIVOT 환승 횟수별 환승통행시간 일별-->
	<select id ="downloadTransferResultListTimeNum_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 	
            (
                SELECT
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,OPRAT_DATE
                    ,DY
                    ,ANAL_AREA_CD
                    ,TRANSFER_NUM
                    ,NVL(CD_NO,'평균') CD_NO
                    ,NVL(ROUND(AVG(USER_TIME_AVG), 1), 0) USER_TIME_AVG
                FROM
                    (
                        SELECT 
                        SDATE
                        ,OPRAT_DATE
                        ,DY
                        ,ANAL_AREA_CD
                        ,TRANSFER_NUM
                        ,CD_NO
                        ,ROUND(AVG(USER_TIME_AVG), 1) USER_TIME_AVG
                        FROM
                            (
                                SELECT 
                                    SDATE
                                    ,OPRAT_DATE
                                    ,TO_CHAR(SDATE, 'DY') DY
                                    ,ANAL_AREA_CD
                                    ,TRANSFER_NUM
                                    ,CD_NO
                                    ,CASE WHEN USER_TIME_AVG = 0 THEN NULL ELSE USER_TIME_AVG END USER_TIME_AVG
                                FROM 환승_횟수별_환승통행시간
                                WHERE 1=1
                                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                                    AND ANAL_AREA_CD = #{anal_area_cd}
                                    AND PROVIDER = #{provider}
                                    <if test="!cd_no[0].equals('00')">
                                        AND CD_NO IN
                                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                            #{arr}
                                        </foreach>
                                    </if>
                            )
                        GROUP BY SDATE
                                ,OPRAT_DATE
                                ,DY
                                ,ANAL_AREA_CD
                                ,TRANSFER_NUM
                                ,CD_NO
                    )
                GROUP BY SDATE
                        ,OPRAT_DATE
                        ,DY
                        ,ANAL_AREA_CD
                        ,TRANSFER_NUM
                        ,ROLLUP(CD_NO)
                ORDER BY  SDATE, TRANSFER_NUM, CD_NO
            )
        PIVOT
            (
                SUM(USER_TIME_AVG)
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY  OPRAT_DATE, TRANSFER_NUM
	</select>
	
	<!-- PIVOT 환승 수단별 환승통행거리 -->
	<select id ="downloadTransferResultListDistnMethod" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 	
            (
                SELECT 	
                		#{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
						,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
						,#{provider_text} PROVIDER
						,TO_CHAR(SDATE, 'DY') DY
                		,SDATE
						,OPRAT_DATE
						,ANAL_AREA_CD
				        <if test="tm.equals('')">
				            ,TFCMN
				            ,NVL(TM, '평균') TM
				        </if>
				        <if test="!tm.equals('')">
				            ,NVL(TFCMN,'평균') TFCMN
				        </if>
						,CD_NO
						,NVL(ROUND(AVG(USER_DISTN_AVG),1),0) USER_DISTN_AVG 
				FROM
					(
						SELECT 
							SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
							,CONCAT(TFCMN_START, CONCAT('-',TFCMN_END)) TFCMN
				            <if test="tm.equals('')">
				                ,TM
				            </if>
							,NVL(CD_NO,'평균') CD_NO
							,ROUND(AVG(CASE WHEN USER_DISTN_AVG = 0 THEN NULL ELSE USER_DISTN_AVG END),1) USER_DISTN_AVG 
						FROM 환승_수단별_환승통행거리
						WHERE 1=1
				            AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
				            AND ANAL_AREA_CD = #{anal_area_cd}
				            AND PROVIDER = #{provider}
				            <if test="tm.equals('')">
				                AND TM BETWEEN #{tmStart} AND #{tmEnd}
				            </if>
				            <if test="!cd_no[0].equals('00')">
				                AND CD_NO IN
				                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
				                    #{arr}
				                </foreach>
				            </if>
						GROUP BY 	SDATE
									,OPRAT_DATE
									,ANAL_AREA_CD
									,CONCAT(TFCMN_START, CONCAT('-',TFCMN_END))
				                   <if test="tm.equals('')">
				                        ,TM
				                    </if>
									,ROLLUP(CD_NO)
					)
				GROUP BY 
						TO_CHAR(SDATE, 'DY')
						,SDATE
						,OPRAT_DATE
						,ANAL_AREA_CD
						,CD_NO
				        <if test="tm.equals('')">
						    ,TFCMN
				            ,ROLLUP(TM)
				            ORDER BY SDATE, TFCMN, TM, CD_NO
				        </if>
				        <if test="!tm.equals('')">
						    ,ROLLUP(TFCMN)
				            ORDER BY SDATE, TFCMN, CD_NO
				        </if>
            )
        PIVOT
            (
                SUM(USER_DISTN_AVG)
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        <if test="tm.equals('')">
        	ORDER BY  OPRAT_DATE, TFCMN, TM
        </if>
        <if test="!tm.equals('')">
        	ORDER BY  OPRAT_DATE, TFCMN
        </if>
	</select>
	
	<!-- PIVOT 환승 횟수별 환승통행거리 -->
	<select id ="downloadTransferResultListDistnNum" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 	
            (
                SELECT 
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,OPRAT_DATE
                    ,DY
                    ,TRANSFER_NUM
                    ,NVL(TM,'평균') TM
                    ,NVL(CD_NO,'평균') CD_NO
                    ,NVL(ROUND(AVG(USER_DISTN_AVG), 1), 0) USER_DISTN_AVG
                FROM
                    (
                        SELECT 
                            SDATE
                            ,OPRAT_DATE
                            ,ANAL_AREA_CD
                            ,TO_CHAR(SDATE,'DY') DY
                            ,TRANSFER_NUM
                            ,TM
                            ,CD_NO
                            ,CASE WHEN USER_DISTN_AVG = 0 THEN NULL ELSE USER_DISTN_AVG END USER_DISTN_AVG
                        FROM 환승_횟수별_환승통행거리
                        WHERE 1=1
	                        AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	                        AND ANAL_AREA_CD = #{anal_area_cd}
	                        AND PROVIDER = #{provider}
	                        <if test="tm==null || tm.equals('')">
	                            AND TM BETWEEN #{tmStart} AND #{tmEnd}
	                        </if>
	                        <if test="!cd_no[0].equals('00')">
	                            AND CD_NO IN
	                            <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
	                                #{arr}
	                            </foreach>
	                        </if>
                    )
                GROUP BY 
                        OPRAT_DATE
                        ,DY
                        ,TRANSFER_NUM
                        ,CUBE(TM, CD_NO)
                ORDER BY  SDATE, TRANSFER_NUM, TM, CD_NO
            )
        PIVOT
            (
                SUM(USER_DISTN_AVG)
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY  OPRAT_DATE, TRANSFER_NUM, TM
	</select>
	
	<!-- PIVOT 환승 횟수별 환승통행거리 일별-->
	<select id ="downloadTransferResultListDistnNum_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 	
            (
                SELECT
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,SDATE
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE, 'DY') DY
                    ,ANAL_AREA_CD
                    ,TRANSFER_NUM
                    ,NVL(CD_NO,'평균') CD_NO
                    ,NVL(ROUND(AVG(USER_DISTN_AVG), 1), 0) USER_DISTN_AVG
                FROM
                    (
                        SELECT 
                            SDATE
                            ,OPRAT_DATE
                            ,ANAL_AREA_CD
                            ,TRANSFER_NUM
                            ,CD_NO
                            ,ROUND(AVG(USER_DISTN_AVG), 1) USER_DISTN_AVG
                        FROM
                            (
                                SELECT 
                                    SDATE
                                    ,OPRAT_DATE
                                    ,ANAL_AREA_CD
                                    ,TRANSFER_NUM
                                    ,CD_NO
                                    ,CASE WHEN USER_DISTN_AVG = 0 THEN NULL ELSE USER_DISTN_AVG END USER_DISTN_AVG
                                FROM 환승_횟수별_환승통행거리
                                WHERE 1=1
                                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                                    AND ANAL_AREA_CD = #{anal_area_cd}
                                    AND PROVIDER = #{provider}
                                    <if test="!cd_no[0].equals('00')">
                                        AND CD_NO IN
                                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                            #{arr}
                                        </foreach>
                                    </if>
                            )
                        GROUP BY SDATE
                                ,OPRAT_DATE
                                ,ANAL_AREA_CD
                                ,TRANSFER_NUM
                                ,CD_NO
                    )
                GROUP BY SDATE
                        ,OPRAT_DATE
                        ,TO_CHAR(SDATE, 'DY')
                        ,ANAL_AREA_CD
                        ,TRANSFER_NUM
                        ,ROLLUP(CD_NO)
                ORDER BY  SDATE, TRANSFER_NUM, CD_NO
            )
        PIVOT
            (
                SUM(USER_DISTN_AVG)
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY  OPRAT_DATE, TRANSFER_NUM
	</select>
	
	
	
	
	
	
	<!-- ********************** 그래프 쿼리 **********************  -->
	
	
	
	
	<!-- graph 환승 수단별통행 -->
	<select id ="graphTransferResultListMethod" parameterType="sVO" resultType="egovMap">
	    SELECT OPRAT_DATE 
				, TFCMN
				, LISTAGG(USER_CNT_AGG,',') WITHIN GROUP(ORDER BY CD_NO)  USER_CNT_AGG
        FROM
            (
                SELECT OPRAT_DATE 
                        ,CONCAT(TFCMN_START,CONCAT('_',TFCMN_END)) TFCMN
                        ,CD_NO
                        ,SUM(USER_CNT_AGG)  USER_CNT_AGG
                FROM 환승_수단별통행
                WHERE 1 = 1
                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="tm==null || tm.equals('')">
                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
                    </if>
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY 
                    OPRAT_DATE 
                    ,CONCAT(TFCMN_START,CONCAT('_',TFCMN_END)) 
                    ,CD_NO
            )
        GROUP BY OPRAT_DATE 
                ,TFCMN 
        ORDER BY OPRAT_DATE, TFCMN
	</select>
	
	<!-- graph 환승 노선별통행 -->
	<select id ="graphTransferResultListRoute" parameterType="sVO" resultType="egovMap">
	    SELECT 
		        OPRAT_DATE
		        ,TFCMN
		        ,ROUTE_ID
		        ,ROUTE_NMA
		        ,SUM(USER_CNT_AGG) USER_CNT_AGG
        FROM 환승_노선별통행
        WHERE 1=1
            AND SDATE = TO_DATE(#{dateStart} , 'YYYY-MM-DD') 
            AND ANAL_AREA_CD = #{anal_area_cd}
            AND PROVIDER = #{provider}
            <if test="tm==null || tm.equals('')">
                AND TM BETWEEN #{tmStart} AND #{tmEnd}
            </if>
            <if test="!cd_no[0].equals('00')">
                AND CD_NO IN
                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                    #{arr}
                </foreach>
            </if>
        GROUP BY 	OPRAT_DATE
                    ,TFCMN
                    ,ROUTE_ID
                    ,ROUTE_NMA
        ORDER BY OPRAT_DATE, TFCMN, ROUTE_ID, ROUTE_NMA
	</select>
	
	<!-- graph 환승 횟수별통행 -->
	<select id ="graphTransferResultListNum" parameterType="sVO" resultType="egovMap">
	    SELECT OPRAT_DATE 
		            ,TRANSFER_NUM 
		            ,LISTAGG(USER_CNT_AGG,',') WITHIN GROUP(ORDER BY CD_NO)  USER_CNT_AGG
        FROM
            (
                SELECT OPRAT_DATE 
                        ,TRANSFER_NUM 
                        ,CD_NO
                        ,SUM(USER_CNT_AGG) USER_CNT_AGG
                FROM 환승_횟수별통행
                WHERE 1=1
                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="tm==null || tm.equals('')">
                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
                    </if>
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY OPRAT_DATE 
                            ,TRANSFER_NUM
                            ,CD_NO
            )
        GROUP BY OPRAT_DATE 
                ,TRANSFER_NUM
        ORDER BY OPRAT_DATE, TRANSFER_NUM
	</select>
	
	<!-- graph 환승 수단별 환승통행시간  -->
	<select id ="graphTransferResultListTimeMethod" parameterType="sVO" resultType="egovMap">
	    SELECT OPRAT_DATE 
				,TFCMN 
				,LISTAGG(USER_TIME_AVG,',') WITHIN GROUP(ORDER BY CD_NO)  USER_TIME_AVG
	    FROM 
	        (
	            SELECT OPRAT_DATE 
	                    ,TFCMN
	                    ,CD_NO
	                    ,NVL(ROUND(AVG(USER_TIME_AVG), 1), 0)USER_TIME_AVG
	            FROM
	            (
	                SELECT OPRAT_DATE 
	                        ,CONCAT(TFCMN_START, CONCAT('_',TFCMN_END)) TFCMN
	                        ,CASE WHEN USER_TIME_AVG = '0' THEN NULL ELSE USER_TIME_AVG END USER_TIME_AVG
	                        ,CD_NO
	                FROM 환승_수단별_환승통행시간
	                WHERE 1=1
	                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	                    AND ANAL_AREA_CD = #{anal_area_cd}
	                    AND PROVIDER = #{provider}
	                    <if test="tm==null || tm.equals('')">
	                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
	                    </if>
	                    <if test="!cd_no[0].equals('00')">
	                        AND CD_NO IN
	                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
	                            #{arr}
	                        </foreach>
	                    </if>
	            )
	            GROUP BY OPRAT_DATE 
	                        ,TFCMN
	                        ,CD_NO
	        )
	    GROUP BY OPRAT_DATE 
	                ,TFCMN
	    ORDER BY OPRAT_DATE, TFCMN
	</select>
	
	<!-- graph 환승 횟수별 환승통행시간 -->
	<select id ="graphTransferResultListTimeNum" parameterType="sVO" resultType="egovMap">
	    SELECT OPRAT_DATE 
		            ,TRANSFER_NUM
		            ,LISTAGG(USER_TIME_AVG,',') WITHIN GROUP(ORDER BY CD_NO)  USER_TIME_AVG
        FROM
            (
                SELECT OPRAT_DATE 
                        ,TRANSFER_NUM 
                        ,CD_NO 
                        ,NVL(ROUND(AVG(USER_TIME_AVG), 1), 0)USER_TIME_AVG
                FROM
                (
                    SELECT OPRAT_DATE 
                            ,TRANSFER_NUM 
                            ,CD_NO 
                            ,CASE WHEN USER_TIME_AVG ='0' THEN NULL ELSE USER_TIME_AVG END USER_TIME_AVG 
                    FROM 환승_횟수별_환승통행시간
                    WHERE 1=1
                        AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                        AND ANAL_AREA_CD = #{anal_area_cd}
                        AND PROVIDER = #{provider}
                        <if test="tm==null || tm.equals('')">
                            AND TM BETWEEN #{tmStart} AND #{tmEnd}
                        </if>
                        <if test="!cd_no[0].equals('00')">
                            AND CD_NO IN
                            <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                #{arr}
                            </foreach>
                        </if>
                )
                GROUP BY OPRAT_DATE 
                            ,TRANSFER_NUM
                            ,CD_NO
            )
        GROUP BY OPRAT_DATE 
                    ,TRANSFER_NUM
        ORDER BY OPRAT_DATE,TRANSFER_NUM
	</select>
	
	<!-- graph 환승 수단별 환승통행거리 -->
	<select id ="graphTransferResultListDistnMethod" parameterType="sVO" resultType="egovMap">
	    SELECT OPRAT_DATE 
				,TFCMN 
				,LISTAGG(USER_DISTN_AVG,',') WITHIN GROUP(ORDER BY CD_NO)  USER_DISTN_AVG
        FROM 
            (
                SELECT OPRAT_DATE 
                        ,TFCMN
                        ,CD_NO
                        ,NVL(ROUND(AVG(USER_DISTN_AVG), 1), 0)USER_DISTN_AVG
                FROM
                (
                    SELECT OPRAT_DATE 
                            ,CONCAT(TFCMN_START, CONCAT('_',TFCMN_END)) TFCMN
                            ,CASE WHEN USER_DISTN_AVG = '0' THEN NULL ELSE USER_DISTN_AVG END USER_DISTN_AVG
                            ,CD_NO
                    FROM 환승_수단별_환승통행거리
                    WHERE 1=1
                        AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                        AND ANAL_AREA_CD = #{anal_area_cd}
                        AND PROVIDER = #{provider}
                        <if test="tm==null || tm.equals('')">
                            AND TM BETWEEN #{tmStart} AND #{tmEnd}
                        </if>
                        <if test="!cd_no[0].equals('00')">
                            AND CD_NO IN
                            <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                #{arr}
                            </foreach>
                        </if>
                )
                GROUP BY OPRAT_DATE 
                            ,TFCMN
                            ,CD_NO
            )
        GROUP BY OPRAT_DATE 
                    ,TFCMN
        ORDER BY OPRAT_DATE, TFCMN
	</select>
	
	<!-- graph 환승 횟수별 환승통행거리 -->
	<select id ="graphTransferResultListDistnNum" parameterType="sVO" resultType="egovMap">
	    SELECT OPRAT_DATE 
		            ,TRANSFER_NUM
		            ,LISTAGG(USER_DISTN_AVG,',') WITHIN GROUP(ORDER BY CD_NO)  USER_DISTN_AVG
	    FROM
	        (
	            SELECT OPRAT_DATE 
	                    ,TRANSFER_NUM 
	                    ,CD_NO 
	                    ,NVL(ROUND(AVG(USER_DISTN_AVG), 1), 0)USER_DISTN_AVG
	            FROM
	            (
	                SELECT OPRAT_DATE 
	                        ,TRANSFER_NUM 
	                        ,CD_NO 
	                        ,CASE WHEN USER_DISTN_AVG ='0' THEN NULL ELSE USER_DISTN_AVG END USER_DISTN_AVG 
	                FROM 환승_횟수별_환승통행거리
	                WHERE 1=1
	                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	                    AND ANAL_AREA_CD = #{anal_area_cd}
	                    AND PROVIDER = #{provider}
	                    <if test="tm==null || tm.equals('')">
	                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
	                    </if>
	                    <if test="!cd_no[0].equals('00')">
	                        AND CD_NO IN
	                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
	                            #{arr}
	                        </foreach>
	                    </if>
	            )
	            GROUP BY OPRAT_DATE 
	                        ,TRANSFER_NUM
	                        ,CD_NO
	        )
	    GROUP BY OPRAT_DATE 
	                ,TRANSFER_NUM
	    ORDER BY OPRAT_DATE, TRANSFER_NUM
	</select>
	
	
</mapper>
