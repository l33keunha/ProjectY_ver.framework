<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ybs.indicator.timeDistn.service.impl.TimeDistnMapper">

	<!-- 1일 평균 통행시간 -->
	<select id ="selectTimeDistnResultListDay" parameterType="sVO" resultType="egovMap" fetchSize="1000">
		SELECT 
			SDATE
			,OPRAT_DATE
			,TO_CHAR(SDATE, 'DY') DY
			,ANAL_AREA_CD
		    <if test="tm==null">
		        ,NVL(TM, '평균') TM
		    </if>
			,CD_NO
			,NVL(ROUND(AVG(BRDNG_TM_AVG),1),0) BRDNG_TM_AVG
			,NVL(ROUND(AVG(USE_DST_AVG),1),0) USE_DST_AVG
		FROM
			(
				SELECT 
					SDATE
					,OPRAT_DATE
					,ANAL_AREA_CD
		            <if test="tm==null">
		                ,TM
		            </if>
					,NVL(CD_NO, '평균') CD_NO
					,ROUND(AVG(CASE WHEN BRDNG_TM_AVG = 0 THEN NULL ELSE BRDNG_TM_AVG END),1) BRDNG_TM_AVG
					,ROUND(AVG(CASE WHEN USE_DST_AVG = 0 THEN NULL ELSE USE_DST_AVG END),1) USE_DST_AVG
				FROM 시간거리_목적통행
				WHERE 1=1
					AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD') 
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="tm==null">
                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
                    </if>
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
				GROUP BY 	SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
		                    <if test="tm==null">
		                        ,TM
		                    </if>
							,ROLLUP(CD_NO)
			)
		GROUP BY
				SDATE
				,OPRAT_DATE
				,TO_CHAR(SDATE, 'DY')
				,ANAL_AREA_CD
		        <if test="tm==null">
		            ,ROLLUP(TM)
				    ,CD_NO
		            ORDER BY SDATE, TM, CD_NO 
		        </if>
		        <if test="tm!=null">
				    ,CD_NO
		            ORDER BY SDATE, CD_NO 
		        </if>
	</select>
	
	<!-- 목적통행 평균 통행시간 -->
	<select id ="selectTimeDistnResultListPurpose" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 
			SDATE
			,OPRAT_DATE
			,TO_CHAR(SDATE, 'DY') DY
			,ANAL_AREA_CD
		    <if test="tm==null">
		        ,NVL(TM, '평균') TM
		    </if>
			,CD_NO
			,NVL(ROUND(AVG(BRDNG_TM_AVG),1),0) BRDNG_TM_AVG
			,NVL(ROUND(AVG(USE_DST_AVG),1),0) USE_DST_AVG
		FROM
			(
				SELECT 
					SDATE
					,OPRAT_DATE
					,ANAL_AREA_CD
		            <if test="tm==null">
		                ,TM
		            </if>
					,NVL(CD_NO, '평균') CD_NO
					,ROUND(AVG(CASE WHEN BRDNG_TM_AVG = 0 THEN NULL ELSE BRDNG_TM_AVG END),1) BRDNG_TM_AVG
					,ROUND(AVG(CASE WHEN USE_DST_AVG = 0 THEN NULL ELSE USE_DST_AVG END),1) USE_DST_AVG
				FROM 시간거리_목적통행
				WHERE 1=1
					AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD') 
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="tm==null">
                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
                    </if>
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
				GROUP BY 	SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
		                    <if test="tm==null">
		                        ,TM
		                    </if>
							,ROLLUP(CD_NO)
			)
		GROUP BY
				SDATE
				,OPRAT_DATE
				,TO_CHAR(SDATE, 'DY') 
				,ANAL_AREA_CD
		        <if test="tm==null">
		            ,ROLLUP(TM)
				    ,CD_NO
		            ORDER BY SDATE, TM, CD_NO 
		        </if>
		        <if test="tm!=null">
				    ,CD_NO
		            ORDER BY SDATE, CD_NO 
		        </if>
	</select>
	
	<!-- 수단통행 평균 통행시간 -->
	<select id ="selectTimeDistnResultListMethod" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 
			SDATE
			,OPRAT_DATE
			,TO_CHAR(SDATE, 'DY') DY
			,ANAL_AREA_CD
		    <if test="tm==null">
		    	,TFCMN
		        ,NVL(TM, '평균') TM
		    </if>
  		    <if test="tm!=null">
		        ,NVL(TFCMN, '평균') TFCMN
		    </if>
			,CD_NO
			,NVL(ROUND(AVG(BRDNG_TM_AVG),1),0) BRDNG_TM_AVG
			,NVL(ROUND(AVG(USE_DST_AVG),1),0) USE_DST_AVG
		FROM
			(
				SELECT 
					SDATE
					,OPRAT_DATE
					,ANAL_AREA_CD
					,CASE WHEN TFCMN = 'B' THEN '버스' ELSE '지하철' END TFCMN
		            <if test="tm==null">
		                ,TM
		            </if>
					,NVL(CD_NO, '평균') CD_NO
					,ROUND(AVG(CASE WHEN BRDNG_TM_AVG = 0 THEN NULL ELSE BRDNG_TM_AVG END),1) BRDNG_TM_AVG
					,ROUND(AVG(CASE WHEN USE_DST_AVG = 0 THEN NULL ELSE USE_DST_AVG END),1) USE_DST_AVG
				FROM 시간거리_수단통행
				WHERE 1=1
					AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD') 
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="tm==null">
                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
                    </if>
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
				GROUP BY 	SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
							,TFCMN
		                    <if test="tm==null">
		                        ,TM
		                    </if>
							,ROLLUP(CD_NO)
			)
		GROUP BY
				SDATE
				,OPRAT_DATE
				,TO_CHAR(SDATE, 'DY') 
				,ANAL_AREA_CD
		        <if test="tm==null">
				  	,TFCMN
		            ,ROLLUP(TM)
				    ,CD_NO
		            ORDER BY SDATE, TFCMN, TM, CD_NO 
		        </if>
		        <if test="tm!=null">
	        		,ROLLUP(TFCMN)
				    ,CD_NO
		            ORDER BY SDATE, TFCMN, CD_NO 
		        </if>
	</select>
	
	<!-- 노선별 평균 통행시간 -->
	<select id ="selectTimeDistnResultListRoute" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 	
            OPRAT_DATE
            ,DY
            ,ANAL_AREA_CD
            ,TFCMN
            ,ROUTE_ID
            ,ROUTE_NMA
            ,ROUTE_TYPE
            ,ROUTE_START
            ,ROUTE_END
            ,NVL(TM, '평균') TM
            ,NVL(CD_NO, '평균') CD_NO
            ,NVL(ROUND(AVG(BRDNG_TM_AVG),1), 0) BRDNG_TM_AVG
            ,NVL(ROUND(AVG(USE_DST_AVG),1), 0) USE_DST_AVG 
        FROM
            (
                SELECT 
                    SDATE
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE,'DY') DY
                    ,ANAL_AREA_CD
                    ,CASE WHEN TFCMN='B' THEN '버스' ELSE '지하철' END TFCMN
                    ,ROUTE_ID
                    ,ROUTE_NMA
                    ,ROUTE_TYPE
                    ,ROUTE_START
                    ,ROUTE_END
                    ,TM
                    ,CD_NO
                    ,ROUND(AVG(CASE WHEN BRDNG_TM_AVG = '0' THEN NULL ELSE BRDNG_TM_AVG END),1) BRDNG_TM_AVG
					,ROUND(AVG(CASE WHEN USE_DST_AVG = '0' THEN NULL ELSE USE_DST_AVG END),1) USE_DST_AVG 
                FROM 시간거리_노선별통행
                WHERE 1=1
                    AND SDATE = TO_DATE(#{dateStart} , 'YYYY-MM-DD') 
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="tm==null || tm.equals('')">
                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
                    </if>
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY')
                            ,ANAL_AREA_CD
                            ,TFCMN
                            ,ROUTE_ID
                            ,ROUTE_NMA
                            ,ROUTE_TYPE
                            ,ROUTE_START
                            ,ROUTE_END
                            ,TM
                            ,CD_NO
            )			
        GROUP BY 	SDATE
                ,OPRAT_DATE
                ,DY
                ,ANAL_AREA_CD
                ,TFCMN
                ,ROUTE_ID
                ,ROUTE_NMA
                ,ROUTE_TYPE
                ,ROUTE_START
                ,ROUTE_END
                ,CUBE(TM, CD_NO)
        ORDER BY OPRAT_DATE, TFCMN, ROUTE_NMA, ROUTE_ID, TM, CD_NO
	</select>
	
	<!-- 노선별 평균 통행시간 일별 -->
	<select id ="selectTimeDistnResultListRoute_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 	
            OPRAT_DATE
            ,DY
            ,ANAL_AREA_CD
            ,TFCMN
            ,ROUTE_ID
            ,ROUTE_NMA
            ,ROUTE_TYPE
            ,ROUTE_START
            ,ROUTE_END
            ,NVL(CD_NO, '평균') CD_NO
            ,NVL(ROUND(AVG(BRDNG_TM_AVG),1), 0) BRDNG_TM_AVG
            ,NVL(ROUND(AVG(USE_DST_AVG),1), 0) USE_DST_AVG 
        FROM
            (
                SELECT 
                    SDATE
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE,'DY') DY
                    ,ANAL_AREA_CD
                    ,CASE WHEN TFCMN='B' THEN '버스' ELSE '지하철' END TFCMN
                    ,ROUTE_ID
                    ,ROUTE_NMA
                    ,ROUTE_TYPE
                    ,ROUTE_START
                    ,ROUTE_END
                    ,CD_NO
                    ,ROUND(AVG(CASE WHEN BRDNG_TM_AVG = '0' THEN NULL ELSE BRDNG_TM_AVG END),1) BRDNG_TM_AVG
					,ROUND(AVG(CASE WHEN USE_DST_AVG = '0' THEN NULL ELSE USE_DST_AVG END),1) USE_DST_AVG 
                FROM 시간거리_노선별통행
                WHERE 1=1
                    AND SDATE = TO_DATE(#{dateStart} , 'YYYY-MM-DD')
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY')
                            ,ANAL_AREA_CD
                            ,TFCMN
                            ,ROUTE_ID
                            ,ROUTE_NMA
                            ,ROUTE_TYPE
                            ,ROUTE_START
                            ,ROUTE_END
                            ,CD_NO
            )			
        GROUP BY 	SDATE
                ,OPRAT_DATE
                ,DY
                ,ANAL_AREA_CD
                ,TFCMN
                ,ROUTE_ID
                ,ROUTE_NMA
                ,ROUTE_TYPE
                ,ROUTE_START
                ,ROUTE_END
                ,ROLLUP(CD_NO)
        ORDER BY OPRAT_DATE, TFCMN, ROUTE_NMA, ROUTE_ID, CD_NO
	</select>








    <!-- ********************** 화면용 다운로드 **********************  -->
    
    

	
	
	<!--  PIVOT 1일 평균 통행시간 -->
	<select id ="downloadTimeDistnResultListDay" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 
                	#{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
					,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
					,#{provider_text} PROVIDER
					,TO_CHAR(SDATE, 'DY') DY
					,SDATE
					,OPRAT_DATE
					,ANAL_AREA_CD
				    <if test="tm.equals('')">
				        ,NVL(TM, '평균') TM
				    </if>
					,CD_NO
					,NVL(ROUND(AVG(BRDNG_TM_AVG),1),0) BRDNG_TM_AVG
					,NVL(ROUND(AVG(USE_DST_AVG),1),0) USE_DST_AVG
				FROM
					(
						SELECT 
							SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
				            <if test="tm.equals('')">
				                ,TM
				            </if>
							,NVL(CD_NO, '평균') CD_NO
							,ROUND(AVG(CASE WHEN BRDNG_TM_AVG = 0 THEN NULL ELSE BRDNG_TM_AVG END),1) BRDNG_TM_AVG
							,ROUND(AVG(CASE WHEN USE_DST_AVG = 0 THEN NULL ELSE USE_DST_AVG END),1) USE_DST_AVG
						FROM 시간거리_목적통행
						WHERE 1=1
							AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD') 
		                    AND ANAL_AREA_CD = #{anal_area_cd}
		                    AND PROVIDER = #{provider}
		                    <if test="tm.equals('')">
		                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
		                    </if>
		                    <if test="!cd_no[0].equals('00')">
		                        AND CD_NO IN
		                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
		                            #{arr}
		                        </foreach>
	                   		</if>
						GROUP BY 	SDATE
									,OPRAT_DATE
									,ANAL_AREA_CD
				                    <if test="tm.equals('')">
				                        ,TM
				                    </if>
									,ROLLUP(CD_NO)
					)
				GROUP BY
						SDATE
						,OPRAT_DATE
						,ANAL_AREA_CD
						,TO_CHAR(SDATE, 'DY')
				        <if test="tm.equals('')">
				            ,ROLLUP(TM)
						    ,CD_NO
				        </if>
				        <if test="!tm.equals('')">
						    ,CD_NO
				        </if>
            )
        PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        <if test="tm.equals('')">
        	ORDER BY  OPRAT_DATE, TM
        </if>
        <if test="!tm.equals('')">
        	ORDER BY  OPRAT_DATE
        </if>
	</select>
	
	<!--  PIVOT 목적통행 평균 통행시간 -->
	<select id ="downloadTimeDistnResultListPurpose" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 
                	#{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
					,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
					,#{provider_text} PROVIDER
					,TO_CHAR(SDATE, 'DY') DY
					,SDATE
					,OPRAT_DATE
					,ANAL_AREA_CD
				    <if test="tm.equals('')">
				        ,NVL(TM, '평균') TM
				    </if>
					,CD_NO
					,NVL(ROUND(AVG(BRDNG_TM_AVG),1),0) BRDNG_TM_AVG
					,NVL(ROUND(AVG(USE_DST_AVG),1),0) USE_DST_AVG
				FROM
					(
						SELECT 
							SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
				            <if test="tm.equals('')">
				                ,TM
				            </if>
							,NVL(CD_NO, '평균') CD_NO
							,ROUND(AVG(CASE WHEN BRDNG_TM_AVG = 0 THEN NULL ELSE BRDNG_TM_AVG END),1) BRDNG_TM_AVG
							,ROUND(AVG(CASE WHEN USE_DST_AVG = 0 THEN NULL ELSE USE_DST_AVG END),1) USE_DST_AVG
						FROM 시간거리_목적통행
						WHERE 1=1
							AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
		                    AND ANAL_AREA_CD = #{anal_area_cd}
		                    AND PROVIDER = #{provider}
		                    <if test="tm.equals('')">
		                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
		                    </if>
		                    <if test="!cd_no[0].equals('00')">
		                        AND CD_NO IN
		                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
		                            #{arr}
		                        </foreach>
	                   		</if>
						GROUP BY 	SDATE
									,OPRAT_DATE
									,ANAL_AREA_CD
				                    <if test="tm.equals('')">
				                        ,TM
				                    </if>
									,ROLLUP(CD_NO)
					)
				GROUP BY
						SDATE
						,OPRAT_DATE
						,ANAL_AREA_CD
						,TO_CHAR(SDATE, 'DY')
				        <if test="tm.equals('')">
				            ,ROLLUP(TM)
						    ,CD_NO
				        </if>
				        <if test="!tm.equals('')">
						    ,CD_NO
				        </if>
            )
        PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        <if test="tm.equals('')">
        	ORDER BY  OPRAT_DATE, TM
        </if>
        <if test="!tm.equals('')">
        	ORDER BY  OPRAT_DATE
        </if>
	</select>
	
	<!--  PIVOT 수단통행 평균 통행시간 -->
	<select id ="downloadTimeDistnResultListMethod" parameterType="sVO" resultType="egovMap" fetchSize="1000">
                SELECT *
        FROM 
            (
                SELECT 
                	#{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
					,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
					,#{provider_text} PROVIDER
					,TO_CHAR(SDATE, 'DY') DY
					,SDATE
					,OPRAT_DATE
					,ANAL_AREA_CD
				    <if test="tm.equals('')">
				    	,TFCMN
				        ,NVL(TM, '평균') TM
				    </if>
				    <if test="!tm.equals('')">
				        ,NVL(TFCMN, '평균') TFCMN
				    </if>
					,CD_NO
					,NVL(ROUND(AVG(BRDNG_TM_AVG),1),0) BRDNG_TM_AVG
					,NVL(ROUND(AVG(USE_DST_AVG),1),0) USE_DST_AVG
				FROM
					(
						SELECT 
							SDATE
							,OPRAT_DATE
							,ANAL_AREA_CD
							,CASE WHEN TFCMN = 'B' THEN '버스' ELSE '지하철' END TFCMN
				            <if test="tm.equals('')">
				                ,TM
				            </if>
							,NVL(CD_NO, '평균') CD_NO
							,ROUND(AVG(CASE WHEN BRDNG_TM_AVG = 0 THEN NULL ELSE BRDNG_TM_AVG END),1) BRDNG_TM_AVG
							,ROUND(AVG(CASE WHEN USE_DST_AVG = 0 THEN NULL ELSE USE_DST_AVG END),1) USE_DST_AVG
						FROM 시간거리_수단통행
						WHERE 1=1
							AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD') 
		                    AND ANAL_AREA_CD = #{anal_area_cd}
		                    AND PROVIDER = #{provider}
		                    <if test="tm.equals('')">
		                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
		                    </if>
		                    <if test="!cd_no[0].equals('00')">
		                        AND CD_NO IN
		                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
		                            #{arr}
		                        </foreach>
	                   		</if>
						GROUP BY 	SDATE
									,OPRAT_DATE
									,ANAL_AREA_CD
									,TFCMN
				                    <if test="tm.equals('')">
				                        ,TM
				                    </if>
									,ROLLUP(CD_NO)
					)
				GROUP BY
						SDATE
						,OPRAT_DATE
						,ANAL_AREA_CD
						,TO_CHAR(SDATE, 'DY')
				        <if test="tm.equals('')">
				        	,TFCMN
				            ,ROLLUP(TM)
						    ,CD_NO
				        </if>
				        <if test="!tm.equals('')">
				        	,ROLLUP(TFCMN)
						    ,CD_NO
				        </if>
            )
        PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        <if test="tm.equals('')">
        	ORDER BY  OPRAT_DATE, TFCMN, TM
        </if>
        <if test="!tm.equals('')">
        	ORDER BY  OPRAT_DATE, TFCMN
        </if>
	</select>
	
	<!--  PIVOT 노선별 평균 통행시간 -->
	<select id ="downloadTimeDistnResultListRoute" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 	
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,OPRAT_DATE
                    ,DY
                    ,ANAL_AREA_CD
                    ,TFCMN
                    ,ROUTE_ID
                    ,ROUTE_NMA
                    ,ROUTE_TYPE
                    ,ROUTE_START
                    ,ROUTE_END
                    ,NVL(TM, '평균') TM
                    ,NVL(CD_NO, '평균') CD_NO
                    ,NVL(ROUND(AVG(BRDNG_TM_AVG),1), 0) BRDNG_TM_AVG
                    ,NVL(ROUND(AVG(USE_DST_AVG),1), 0) USE_DST_AVG 
                FROM
                    (
                        SELECT 
                            SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY') DY
                            ,ANAL_AREA_CD
                            ,CASE WHEN TFCMN='B' THEN '버스' ELSE '지하철' END TFCMN
                            ,ROUTE_ID
                            ,ROUTE_NMA
                            ,ROUTE_TYPE
                            ,ROUTE_START
                            ,ROUTE_END
                            ,TM
                            ,CD_NO
                            ,ROUND(AVG(CASE WHEN BRDNG_TM_AVG = '0' THEN NULL ELSE BRDNG_TM_AVG END),1) BRDNG_TM_AVG
							,ROUND(AVG(CASE WHEN USE_DST_AVG = '0' THEN NULL ELSE USE_DST_AVG END),1) USE_DST_AVG 
                        FROM 시간거리_노선별통행
                        WHERE 1=1
                            AND SDATE = TO_DATE(#{dateStart} , 'YYYY-MM-DD')
	                        AND ANAL_AREA_CD = #{anal_area_cd}
	                        AND PROVIDER = #{provider}
	                        <if test="tm==null || tm.equals('')">
	                            AND TM BETWEEN #{tmStart} AND #{tmEnd}
	                        </if>
	                        <if test="!cd_no[0].equals('00')">
                                AND CD_NO IN
                                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                    #{arr}
                                </foreach>
                            </if>
                        GROUP BY 	SDATE
                                    ,OPRAT_DATE
                                    ,TO_CHAR(SDATE,'DY')
                                    ,ANAL_AREA_CD
                                    ,TFCMN
                                    ,ROUTE_ID
		                            ,ROUTE_NMA
		                            ,ROUTE_TYPE
		                            ,ROUTE_START
		                            ,ROUTE_END
                                    ,TM
                                    ,CD_NO
                    )			
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,DY
                            ,ANAL_AREA_CD
                            ,TFCMN
                            ,ROUTE_ID
                            ,ROUTE_NMA
                            ,ROUTE_TYPE
                            ,ROUTE_START
                            ,ROUTE_END
                            ,CUBE(TM, CD_NO)
            )
        PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY OPRAT_DATE, TFCMN, ROUTE_NMA, ROUTE_ID, TM
	</select>
	
	<!--  PIVOT 노선별 평균 통행시간 일별 -->
	<select id ="downloadTimeDistnResultListRoute_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 	
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,OPRAT_DATE
                    ,DY
                    ,ANAL_AREA_CD
                    ,TFCMN
                    ,ROUTE_ID
                    ,ROUTE_NMA
                    ,ROUTE_TYPE
                    ,ROUTE_START
                    ,ROUTE_END
                    ,NVL(CD_NO, '평균') CD_NO
                    ,NVL(ROUND(AVG(BRDNG_TM_AVG),1), 0) BRDNG_TM_AVG
                    ,NVL(ROUND(AVG(USE_DST_AVG),1), 0) USE_DST_AVG 
                FROM
                    (
                        SELECT 
                            SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY') DY
                            ,ANAL_AREA_CD
                            ,CASE WHEN TFCMN='B' THEN '버스' ELSE '지하철' END TFCMN
                            ,ROUTE_ID
                            ,ROUTE_NMA
                            ,ROUTE_TYPE
                            ,ROUTE_START
                            ,ROUTE_END
                            ,CD_NO
                            ,ROUND(AVG(CASE WHEN BRDNG_TM_AVG = '0' THEN NULL ELSE BRDNG_TM_AVG END),1) BRDNG_TM_AVG
							,ROUND(AVG(CASE WHEN USE_DST_AVG = '0' THEN NULL ELSE USE_DST_AVG END),1) USE_DST_AVG 
                        FROM 시간거리_노선별통행
                        WHERE 1=1
                            AND SDATE = TO_DATE(#{dateStart} , 'YYYY-MM-DD')
	                        AND ANAL_AREA_CD = #{anal_area_cd}
	                        AND PROVIDER = #{provider}
	                        <if test="!cd_no[0].equals('00')">
                                AND CD_NO IN
                                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                    #{arr}
                                </foreach>
                            </if>
                        GROUP BY 	SDATE
                                    ,OPRAT_DATE
                                    ,TO_CHAR(SDATE,'DY')
                                    ,ANAL_AREA_CD
                                    ,TFCMN
                                    ,ROUTE_ID
		                            ,ROUTE_NMA
		                            ,ROUTE_TYPE
		                            ,ROUTE_START
		                            ,ROUTE_END
                                    ,CD_NO
                    )			
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,DY
                            ,ANAL_AREA_CD
                            ,TFCMN
                            ,ROUTE_ID
                            ,ROUTE_NMA
                            ,ROUTE_TYPE
                            ,ROUTE_START
                            ,ROUTE_END
                            ,ROLLUP(CD_NO)
            )
        PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY OPRAT_DATE, TFCMN, ROUTE_NMA, ROUTE_ID
	</select>


    
	<!-- ********************** 그래프 쿼리 **********************  -->
		
	<!--  1일 평균 통행시간거리_그래프 -->
	<select id ="graphTimeDistnResultListDay" parameterType="sVO" resultType="egovMap" fetchSize="1000">
		SELECT OPRAT_DATE			
			,LISTAGG(BRDNG_TM_AVG,',') WITHIN GROUP(ORDER BY CD_NO)  BRDNG_TM_AVG
			,LISTAGG(USE_DST_AVG,',') WITHIN GROUP(ORDER BY CD_NO)  USE_DST_AVG
		FROM 
            (
                SELECT 
                    OPRAT_DATE
                    ,CD_NO 
                    ,NVL(ROUND(AVG(CASE WHEN BRDNG_TM_AVG = '0' THEN NULL ELSE BRDNG_TM_AVG END),1),0) BRDNG_TM_AVG
                    ,NVL(ROUND(AVG(CASE WHEN USE_DST_AVG = '0' THEN NULL ELSE USE_DST_AVG END),1),0) USE_DST_AVG
                FROM 시간거리_목적통행 
                WHERE 1 = 1
                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="tm==null || tm.equals('')">
                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
                    </if>
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                    GROUP BY OPRAT_DATE
                            ,CD_NO
                ORDER BY OPRAT_DATE
                        ,CD_NO
		        )
		GROUP BY OPRAT_DATE		
	</select>
	
	<!--  목적통행 평균 통행시간거리_그래프 -->
	<select id ="graphTimeDistnResultListPurpose" parameterType="sVO" resultType="egovMap" fetchSize="1000">
		SELECT OPRAT_DATE			
			,LISTAGG(BRDNG_TM_AVG,',') WITHIN GROUP(ORDER BY CD_NO)  BRDNG_TM_AVG
			,LISTAGG(USE_DST_AVG,',') WITHIN GROUP(ORDER BY CD_NO)  USE_DST_AVG
		FROM 
            (
                SELECT 
                    OPRAT_DATE
                    ,CD_NO 
                    ,NVL(ROUND(AVG(CASE WHEN BRDNG_TM_AVG = '0' THEN NULL ELSE BRDNG_TM_AVG END),1),0) BRDNG_TM_AVG
                    ,NVL(ROUND(AVG(CASE WHEN USE_DST_AVG = '0' THEN NULL ELSE USE_DST_AVG END),1),0) USE_DST_AVG
                FROM 시간거리_목적통행 
                WHERE 1 = 1
                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="tm==null || tm.equals('')">
                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
                    </if>
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                    GROUP BY OPRAT_DATE
                            ,CD_NO
                ORDER BY OPRAT_DATE
                        ,CD_NO
		        )
		GROUP BY OPRAT_DATE		
	</select>
	
	<!--  수단통행 평균 통행시간거리_그래프 -->
	<select id ="graphTimeDistnResultListMethod" parameterType="sVO" resultType="egovMap" fetchSize="1000">
		SELECT OPRAT_DATE
				,TFCMN
				,LISTAGG(BRDNG_TM_AVG,',') WITHIN GROUP(ORDER BY CD_NO)  BRDNG_TM_AVG
				,LISTAGG(USE_DST_AVG,',') WITHIN GROUP(ORDER BY CD_NO)  USE_DST_AVG
		FROM 
            (
				
				SELECT 
				    OPRAT_DATE
				    ,CD_NO 
				    ,TFCMN 
				    ,NVL(ROUND(AVG(CASE WHEN BRDNG_TM_AVG = '0' THEN NULL ELSE BRDNG_TM_AVG END),1),0) BRDNG_TM_AVG
					,NVL(ROUND(AVG(CASE WHEN USE_DST_AVG = '0' THEN NULL ELSE USE_DST_AVG END),1),0) USE_DST_AVG
				FROM 시간거리_수단통행 
				WHERE 1 = 1
				    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
		            AND ANAL_AREA_CD = #{anal_area_cd}
		            AND PROVIDER = #{provider}
		            <if test="tm==null || tm.equals('')">
		                AND TM BETWEEN #{tmStart} AND #{tmEnd}
		            </if>
		            <if test="!cd_no[0].equals('00')">
		                AND CD_NO IN
		                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
		                    #{arr}
		                </foreach>
		            </if>
				    GROUP BY OPRAT_DATE
				    		,CD_NO
				    		,TFCMN 
				ORDER BY OPRAT_DATE
                        ,CD_NO
                        ,TFCMN
		    ) 
        GROUP BY OPRAT_DATE, TFCMN
	</select>
	
	<!--  노선별통행 평균 통행시간거리_그래프 -->
	<select id ="graphTimeDistnResultListRoute" parameterType="sVO" resultType="egovMap" fetchSize="1000">
		SELECT OPRAT_DATE 
			,ROUTE_ID 
			,ROUTE_NMA 
			,NVL(ROUND(AVG(CASE WHEN BRDNG_TM_AVG = '0' THEN NULL ELSE BRDNG_TM_AVG END),1),0) BRDNG_TM_AVG
			,NVL(ROUND(AVG(CASE WHEN USE_DST_AVG = '0' THEN NULL ELSE USE_DST_AVG END),1),0) USE_DST_AVG 
		FROM 시간거리_노선별통행
		WHERE 1 = 1
		    AND SDATE = TO_DATE(#{dateStart} , 'YYYY-MM-DD')
            AND ANAL_AREA_CD = #{anal_area_cd}
            AND PROVIDER = #{provider}
            <if test="tm==null || tm.equals('')">
                AND TM BETWEEN #{tmStart} AND #{tmEnd}
            </if>
            <if test="!cd_no[0].equals('00')">
                AND CD_NO IN
                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                    #{arr}
                </foreach>
            </if>
		GROUP BY OPRAT_DATE 
				,ROUTE_ID 
				,ROUTE_NMA 
		ORDER BY ROUTE_NMA, ROUTE_ID
	</select>
		
		
		
		
		
</mapper>
