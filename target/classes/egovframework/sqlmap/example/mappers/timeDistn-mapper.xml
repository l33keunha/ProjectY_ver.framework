<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ybs.indicator.timeDistn.service.impl.TimeDistnMapper">

	<!-- 1일 평균 통행시간 -->
	<select id ="selectTimeDistnResultListDay" parameterType="sVO" resultType="egovMap" fetchSize="1000">
		SELECT 	SDATE
                ,OPRAT_DATE
                ,DY
                ,ANAL_AREA_CD
                ,NVL(TM, '평균') TM
                ,NVL(CD_NO, '평균') CD_NO
                ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
                ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
        FROM
            (
                SELECT 
                    SDATE
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE,'DY') DY
                    ,ANAL_AREA_CD
                    ,TM
                    ,CD_NO
                    ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                    ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                FROM 시간거리_목적통행
                WHERE 1=1
                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="tm==null || tm.equals('')">
                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
                    </if>
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY')
                            ,ANAL_AREA_CD
                            ,TM
                            ,CD_NO
            )			
        GROUP BY 	SDATE
                    ,OPRAT_DATE
                    ,DY
                    ,ANAL_AREA_CD
                    ,CUBE(TM, CD_NO)
        ORDER BY OPRAT_DATE, TM, CD_NO
	</select>
	
	<!-- 1일 평균 통행시간 일별 -->
	<select id ="selectTimeDistnResultListDay_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 	SDATE
                ,OPRAT_DATE
                ,DY
                ,ANAL_AREA_CD
                ,NVL(CD_NO,'평균') CD_NO
                ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
                ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
        FROM
            (
                SELECT 
                    SDATE
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE,'DY') DY
                    ,ANAL_AREA_CD
                    ,CD_NO
                    ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                    ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                FROM 시간거리_목적통행
                WHERE 1=1
                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY')
                            ,ANAL_AREA_CD
                            ,CD_NO
                ORDER BY OPRAT_DATE, CD_NO           
            )			
        GROUP BY 	SDATE
                    ,OPRAT_DATE
                    ,DY
                    ,ANAL_AREA_CD
                    ,ROLLUP(CD_NO)
        ORDER BY OPRAT_DATE, CD_NO
	</select>
	
	<!-- 목적통행 평균 통행시간 -->
	<select id ="selectTimeDistnResultListPurpose" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 	SDATE
                ,OPRAT_DATE
                ,DY
                ,ANAL_AREA_CD
                ,NVL(TM, '평균') TM
                ,NVL(CD_NO, '평균') CD_NO
                ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
                ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
        FROM
            (
                SELECT 
                    SDATE
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE,'DY') DY
                    ,ANAL_AREA_CD
                    ,TM
                    ,CD_NO
                    ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                    ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                FROM 시간거리_목적통행
                WHERE 1=1
                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="tm==null || tm.equals('')">
                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
                    </if>
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY')
                            ,ANAL_AREA_CD
                            ,TM
                            ,CD_NO
            )			
        GROUP BY 	SDATE
                    ,OPRAT_DATE
                    ,DY
                    ,ANAL_AREA_CD
                    ,CUBE(TM, CD_NO)
        ORDER BY OPRAT_DATE, TM, CD_NO
	</select>
	
	<!-- 목적통행 평균 통행시간 일별 -->
	<select id ="selectTimeDistnResultListPurpose_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 	SDATE
                ,OPRAT_DATE
                ,DY
                ,ANAL_AREA_CD
                ,NVL(CD_NO,'평균') CD_NO
                ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
                ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
        FROM
            (
                SELECT 
                    SDATE
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE,'DY') DY
                    ,ANAL_AREA_CD
                    ,CD_NO
                    ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                    ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                FROM 시간거리_목적통행
                WHERE 1=1
                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY')
                            ,ANAL_AREA_CD
                            ,CD_NO
                ORDER BY OPRAT_DATE, CD_NO           
            )			
        GROUP BY 	SDATE
                    ,OPRAT_DATE
                    ,DY
                    ,ANAL_AREA_CD
                    ,ROLLUP(CD_NO)
        ORDER BY OPRAT_DATE, CD_NO
	</select>
	
	<!-- 수단통행 평균 통행시간 -->
	<select id ="selectTimeDistnResultListMethod" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 	
                SDATE
                ,OPRAT_DATE
                ,DY
                ,ANAL_AREA_CD
                ,TFCMN
                ,NVL(TM, '평균') TM
                ,NVL(CD_NO, '평균') CD_NO
                ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
                ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
        FROM
            (
                SELECT 
                    SDATE
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE,'DY') DY
                    ,ANAL_AREA_CD
                    ,CASE WHEN TFCMN='B' THEN '버스' ELSE '지하철' END TFCMN
                    ,TM
                    ,CD_NO
                    ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                    ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                FROM 시간거리_수단통행
                WHERE 1=1
                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="tm==null || tm.equals('')">
                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
                    </if>
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY')
                            ,ANAL_AREA_CD
                            ,TFCMN
                            ,TM
                            ,CD_NO
            )			
        GROUP BY 	SDATE
                    ,OPRAT_DATE
                    ,DY
                    ,ANAL_AREA_CD
                    ,TFCMN
                    ,CUBE(TM, CD_NO)
        ORDER BY OPRAT_DATE, TFCMN, TM, CD_NO
	</select>
	
	<!-- 수단통행 평균 통행시간 일별 -->
	<select id ="selectTimeDistnResultListMethod_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 	
                SDATE
                ,OPRAT_DATE
                ,DY
                ,ANAL_AREA_CD
                ,TFCMN
                ,NVL(CD_NO, '평균') CD_NO
                ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
                ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
        FROM
            (
                SELECT 
                    SDATE
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE,'DY') DY
                    ,ANAL_AREA_CD
                    ,CASE WHEN TFCMN='B' THEN '버스' ELSE '지하철' END TFCMN
                    ,CD_NO
                    ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                    ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                FROM 시간거리_수단통행
                WHERE 1=1
                    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY')
                            ,ANAL_AREA_CD
                            ,TFCMN
                            ,CD_NO
            )			
        GROUP BY 	SDATE
                    ,OPRAT_DATE
                    ,DY
                    ,ANAL_AREA_CD
                    ,TFCMN
                    ,ROLLUP(CD_NO)
        ORDER BY OPRAT_DATE, TFCMN, CD_NO
	</select>
	
	<!-- 노선별 평균 통행시간 -->
	<select id ="selectTimeDistnResultListRoute" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 	
            OPRAT_DATE
            ,DY
            ,ANAL_AREA_CD
            ,TFCMN
            ,ROUTE_ID
            ,ROUTE_NMA
            ,ROUTE_TYPE
            ,ROUTE_START
            ,ROUTE_END
            ,NVL(TM, '평균') TM
            ,NVL(CD_NO, '평균') CD_NO
            ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
            ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
        FROM
            (
                SELECT 
                    SDATE
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE,'DY') DY
                    ,ANAL_AREA_CD
                    ,CASE WHEN TFCMN='B' THEN '버스' ELSE '지하철' END TFCMN
                    ,ROUTE_ID
                    ,ROUTE_NMA
                    ,ROUTE_TYPE
                    ,ROUTE_START
                    ,ROUTE_END
                    ,TM
                    ,CD_NO
                    ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                    ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                FROM 시간거리_노선별통행
                WHERE 1=1
                    AND SDATE = TO_DATE(#{dateStart} , 'YYYY-MM-DD') 
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="tm==null || tm.equals('')">
                        AND TM BETWEEN #{tmStart} AND #{tmEnd}
                    </if>
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY')
                            ,ANAL_AREA_CD
                            ,TFCMN
                            ,ROUTE_ID
                            ,ROUTE_NMA
                            ,ROUTE_TYPE
                            ,ROUTE_START
                            ,ROUTE_END
                            ,TM
                            ,CD_NO
            )			
        GROUP BY 	SDATE
                ,OPRAT_DATE
                ,DY
                ,ANAL_AREA_CD
                ,TFCMN
                ,ROUTE_ID
                ,ROUTE_NMA
                ,ROUTE_TYPE
                ,ROUTE_START
                ,ROUTE_END
                ,CUBE(TM, CD_NO)
        ORDER BY OPRAT_DATE, TFCMN, ROUTE_NMA, ROUTE_ID, TM, CD_NO
	</select>
	
	<!-- 노선별 평균 통행시간 일별 -->
	<select id ="selectTimeDistnResultListRoute_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT 	
            OPRAT_DATE
            ,DY
            ,ANAL_AREA_CD
            ,TFCMN
            ,ROUTE_ID
            ,ROUTE_NMA
            ,ROUTE_TYPE
            ,ROUTE_START
            ,ROUTE_END
            ,NVL(CD_NO, '평균') CD_NO
            ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
            ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
        FROM
            (
                SELECT 
                    SDATE
                    ,OPRAT_DATE
                    ,TO_CHAR(SDATE,'DY') DY
                    ,ANAL_AREA_CD
                    ,CASE WHEN TFCMN='B' THEN '버스' ELSE '지하철' END TFCMN
                    ,ROUTE_ID
                    ,ROUTE_NMA
                    ,ROUTE_TYPE
                    ,ROUTE_START
                    ,ROUTE_END
                    ,CD_NO
                    ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                    ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                FROM 시간거리_노선별통행
                WHERE 1=1
                    AND SDATE = TO_DATE(#{dateStart} , 'YYYY-MM-DD')
                    AND ANAL_AREA_CD = #{anal_area_cd}
                    AND PROVIDER = #{provider}
                    <if test="!cd_no[0].equals('00')">
                        AND CD_NO IN
                        <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                            #{arr}
                        </foreach>
                    </if>
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY')
                            ,ANAL_AREA_CD
                            ,TFCMN
                            ,ROUTE_ID
                            ,ROUTE_NMA
                            ,ROUTE_TYPE
                            ,ROUTE_START
                            ,ROUTE_END
                            ,CD_NO
            )			
        GROUP BY 	SDATE
                ,OPRAT_DATE
                ,DY
                ,ANAL_AREA_CD
                ,TFCMN
                ,ROUTE_ID
                ,ROUTE_NMA
                ,ROUTE_TYPE
                ,ROUTE_START
                ,ROUTE_END
                ,ROLLUP(CD_NO)
        ORDER BY OPRAT_DATE, TFCMN, ROUTE_NMA, ROUTE_ID, CD_NO
	</select>








    <!-- ********************** 화면용 다운로드 **********************  -->
    
    

	
	
	<!--  PIVOT 1일 평균 통행시간 -->
	<select id ="downloadTimeDistnResultListDay" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 			
                        #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                        ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                        ,#{provider_text} PROVIDER
                        ,OPRAT_DATE
                        ,DY
                        ,ANAL_AREA_CD
                        ,NVL(TM, '평균') TM
                        ,NVL(CD_NO, '평균') CD_NO
                        ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
                        ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
                FROM
                    (
                        SELECT 
                            SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY') DY
                            ,ANAL_AREA_CD
                            ,TM
                            ,CD_NO
                            ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                            ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                        FROM 시간거리_목적통행
                        WHERE 1=1
                            AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	                        AND ANAL_AREA_CD = #{anal_area_cd}
	                        AND PROVIDER = #{provider}
	                        <if test="tm==null || tm.equals('')">
	                            AND TM BETWEEN #{tmStart} AND #{tmEnd}
	                        </if>
	                        <if test="!cd_no[0].equals('00')">
                                AND CD_NO IN
                                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                    #{arr}
                                </foreach>
                            </if>
                        GROUP BY 	SDATE
                                    ,OPRAT_DATE
                                    ,TO_CHAR(SDATE,'DY')
                                    ,ANAL_AREA_CD
                                    ,TM
                                    ,CD_NO
                    )			
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,DY
                            ,ANAL_AREA_CD
                            ,CUBE(TM, CD_NO)
            )
        PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY OPRAT_DATE, TM
	</select>
	
	<!--  PIVOT 1일 평균 통행시간 일별 -->
	<select id ="downloadTimeDistnResultListDay_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 	#{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                        ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                        ,#{provider_text} PROVIDER
                        ,OPRAT_DATE
                        ,DY
                        ,ANAL_AREA_CD
                        ,NVL(CD_NO,'평균') CD_NO
                        ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0),0) BRDNG_TM_AVG
                        ,NVL(TRUNC(AVG(USE_DST_AVG),0),0) USE_DST_AVG 
                FROM
                    (
                        SELECT 
                            SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY') DY
                            ,ANAL_AREA_CD
                            ,CD_NO
                            ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                            ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                        FROM 시간거리_목적통행
                        WHERE 1=1
                            AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	                        AND ANAL_AREA_CD = #{anal_area_cd}
	                        AND PROVIDER = #{provider}
	                        <if test="!cd_no[0].equals('00')">
                                AND CD_NO IN
                                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                    #{arr}
                                </foreach>
                            </if>
                        GROUP BY 	SDATE
                                    ,OPRAT_DATE
                                    ,TO_CHAR(SDATE,'DY')
                                    ,ANAL_AREA_CD
                                    ,CD_NO
                    )			
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,DY
                            ,ANAL_AREA_CD
                            ,ROLLUP(CD_NO)
            )
        PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY OPRAT_DATE
	</select>
	
	<!--  PIVOT 목적통행 평균 통행시간 -->
	<select id ="downloadTimeDistnResultListPurpose" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 			
                        #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                        ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                        ,#{provider_text} PROVIDER
                        ,OPRAT_DATE
                        ,DY
                        ,ANAL_AREA_CD
                        ,NVL(TM, '평균') TM
                        ,NVL(CD_NO, '평균') CD_NO
                        ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
                        ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
                FROM
                    (
                        SELECT 
                            SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY') DY
                            ,ANAL_AREA_CD
                            ,TM
                            ,CD_NO
                            ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                            ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                        FROM 시간거리_목적통행
                        WHERE 1=1
                            AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	                        AND ANAL_AREA_CD = #{anal_area_cd}
	                        AND PROVIDER = #{provider}
	                        <if test="tm==null || tm.equals('')">
	                            AND TM BETWEEN #{tmStart} AND #{tmEnd}
	                        </if>
	                        <if test="!cd_no[0].equals('00')">
                                AND CD_NO IN
                                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                    #{arr}
                                </foreach>
                            </if>
                        GROUP BY 	SDATE
                                    ,OPRAT_DATE
                                    ,TO_CHAR(SDATE,'DY')
                                    ,ANAL_AREA_CD
                                    ,TM
                                    ,CD_NO
                    )			
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,DY
                            ,ANAL_AREA_CD
                            ,CUBE(TM, CD_NO)
            )
        PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY OPRAT_DATE, TM
	</select>
	
	<!--  PIVOT 목적통행 평균 통행시간 일별 -->
	<select id ="downloadTimeDistnResultListPurpose_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 	#{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                        ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                        ,#{provider_text} PROVIDER
                        ,OPRAT_DATE
                        ,DY
                        ,ANAL_AREA_CD
                        ,NVL(CD_NO,'평균') CD_NO
                        ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0),0) BRDNG_TM_AVG
                        ,NVL(TRUNC(AVG(USE_DST_AVG),0),0) USE_DST_AVG 
                FROM
                    (
                        SELECT 
                            SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY') DY
                            ,ANAL_AREA_CD
                            ,CD_NO
                            ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                            ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                        FROM 시간거리_목적통행
                        WHERE 1=1
                            AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	                        AND ANAL_AREA_CD = #{anal_area_cd}
	                        AND PROVIDER = #{provider}
	                        <if test="!cd_no[0].equals('00')">
                                AND CD_NO IN
                                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                    #{arr}
                                </foreach>
                            </if>
                        GROUP BY 	SDATE
                                    ,OPRAT_DATE
                                    ,TO_CHAR(SDATE,'DY')
                                    ,ANAL_AREA_CD
                                    ,CD_NO
                    )			
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,DY
                            ,ANAL_AREA_CD
                            ,ROLLUP(CD_NO)
            )
        PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY OPRAT_DATE
	</select>
	
	<!--  PIVOT 수단통행 평균 통행시간 -->
	<select id ="downloadTimeDistnResultListMethod" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 	
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,OPRAT_DATE
                    ,DY
                    ,ANAL_AREA_CD
                    ,TFCMN
                    ,NVL(TM, '평균') TM
                    ,NVL(CD_NO, '평균') CD_NO
                    ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
                    ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
                FROM
                    (
                        SELECT 
                            SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY') DY
                            ,ANAL_AREA_CD
                            ,CASE WHEN TFCMN='B' THEN '버스' ELSE '지하철' END TFCMN
                            ,TM
                            ,CD_NO
                            ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                            ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                        FROM 시간거리_수단통행
                        WHERE 1=1
                            AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	                        AND ANAL_AREA_CD = #{anal_area_cd}
	                        AND PROVIDER = #{provider}
	                        <if test="tm==null || tm.equals('')">
	                            AND TM BETWEEN #{tmStart} AND #{tmEnd}
	                        </if>
	                        <if test="!cd_no[0].equals('00')">
                                AND CD_NO IN
                                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                    #{arr}
                                </foreach>
                            </if>
                        GROUP BY 	SDATE
                                    ,OPRAT_DATE
                                    ,TO_CHAR(SDATE,'DY')
                                    ,ANAL_AREA_CD
                                    ,TFCMN
                                    ,TM
                                    ,CD_NO
                    )			
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,DY
                            ,ANAL_AREA_CD
                            ,TFCMN
                            ,CUBE(TM, CD_NO)
            )
        PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY OPRAT_DATE, TFCMN, TM
	</select>
	
	<!--  PIVOT 수단통행 평균 통행시간 일별 -->
	<select id ="downloadTimeDistnResultListMethod_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 	
                        #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                        ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                        ,#{provider_text} PROVIDER
                        ,OPRAT_DATE
                        ,DY
                        ,ANAL_AREA_CD
                        ,TFCMN
                        ,NVL(CD_NO, '평균') CD_NO
                        ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
                        ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
                FROM
                    (
                        SELECT 
                            SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY') DY
                            ,ANAL_AREA_CD
                            ,CASE WHEN TFCMN='B' THEN '버스' ELSE '지하철' END TFCMN
                            ,CD_NO
                            ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                            ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                        FROM 시간거리_수단통행
                        WHERE 1=1
                           AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
	                        AND ANAL_AREA_CD = #{anal_area_cd}
	                        AND PROVIDER = #{provider}
	                        <if test="!cd_no[0].equals('00')">
                                AND CD_NO IN
                                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                    #{arr}
                                </foreach>
                            </if>
                        GROUP BY 	SDATE
                                    ,OPRAT_DATE
                                    ,TO_CHAR(SDATE,'DY')
                                    ,ANAL_AREA_CD
                                    ,TFCMN
                                    ,CD_NO
                    )			
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,DY
                            ,ANAL_AREA_CD
                            ,TFCMN
                            ,ROLLUP(CD_NO)
            )
         PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY OPRAT_DATE, TFCMN
	</select>
	
	<!--  PIVOT 노선별 평균 통행시간 -->
	<select id ="downloadTimeDistnResultListRoute" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 	
                    #{anal_area_cd_sido_text} ANAL_AREA_SIDO_CD_TEXT
                    ,#{anal_area_cd_text} ANAL_AREA_CD_TEXT
                    ,#{provider_text} PROVIDER
                    ,OPRAT_DATE
                    ,DY
                    ,ANAL_AREA_CD
                    ,TFCMN
                    ,ROUTE_ID
                    ,ROUTE_NMA
                    ,ROUTE_TYPE
                    ,ROUTE_START
                    ,ROUTE_END
                    ,NVL(TM, '평균') TM
                    ,NVL(CD_NO, '평균') CD_NO
                    ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
                    ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
                FROM
                    (
                        SELECT 
                            SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY') DY
                            ,ANAL_AREA_CD
                            ,CASE WHEN TFCMN='B' THEN '버스' ELSE '지하철' END TFCMN
                            ,ROUTE_ID
                            ,ROUTE_NMA
                            ,ROUTE_TYPE
                            ,ROUTE_START
                            ,ROUTE_END
                            ,TM
                            ,CD_NO
                            ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                            ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                        FROM 시간거리_노선별통행
                        WHERE 1=1
                            AND SDATE = TO_DATE(#{dateStart} , 'YYYY-MM-DD')
	                        AND ANAL_AREA_CD = #{anal_area_cd}
	                        AND PROVIDER = #{provider}
	                        <if test="tm==null || tm.equals('')">
	                            AND TM BETWEEN #{tmStart} AND #{tmEnd}
	                        </if>
	                        <if test="!cd_no[0].equals('00')">
                                AND CD_NO IN
                                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                    #{arr}
                                </foreach>
                            </if>
                        GROUP BY 	SDATE
                                    ,OPRAT_DATE
                                    ,TO_CHAR(SDATE,'DY')
                                    ,ANAL_AREA_CD
                                    ,TFCMN
                                    ,ROUTE_ID
		                            ,ROUTE_NMA
		                            ,ROUTE_TYPE
		                            ,ROUTE_START
		                            ,ROUTE_END
                                    ,TM
                                    ,CD_NO
                    )			
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,DY
                            ,ANAL_AREA_CD
                            ,TFCMN
                            ,ROUTE_ID
                            ,ROUTE_NMA
                            ,ROUTE_TYPE
                            ,ROUTE_START
                            ,ROUTE_END
                            ,CUBE(TM, CD_NO)
            )
        PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY OPRAT_DATE, TFCMN, ROUTE_NMA, ROUTE_ID, TM
	</select>
	
	<!--  PIVOT 노선별 평균 통행시간 일별 -->
	<select id ="downloadTimeDistnResultListRoute_d" parameterType="sVO" resultType="egovMap" fetchSize="1000">
        SELECT *
        FROM 
            (
                SELECT 	
                    '경기도' ANAL_AREA_SIDO_CD_TEXT
                    ,'평택시' ANAL_AREA_CD_TEXT
                    ,'지자체' PROVIDER
                    ,OPRAT_DATE
                    ,DY
                    ,ANAL_AREA_CD
                    ,TFCMN
                    ,ROUTE_ID
                    ,ROUTE_NMA
                    ,ROUTE_TYPE
                    ,ROUTE_START
                    ,ROUTE_END
                    ,NVL(CD_NO, '평균') CD_NO
                    ,NVL(TRUNC(AVG(BRDNG_TM_AVG),0), 0) BRDNG_TM_AVG
                    ,NVL(TRUNC(AVG(USE_DST_AVG),0), 0) USE_DST_AVG 
                FROM
                    (
                        SELECT 
                            SDATE
                            ,OPRAT_DATE
                            ,TO_CHAR(SDATE,'DY') DY
                            ,ANAL_AREA_CD
                            ,CASE WHEN TFCMN='B' THEN '버스' ELSE '지하철' END TFCMN
                            ,ROUTE_ID
                            ,ROUTE_NMA
                            ,ROUTE_TYPE
                            ,ROUTE_START
                            ,ROUTE_END
                            ,CD_NO
                            ,CASE WHEN TRUNC(AVG(BRDNG_TM_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(BRDNG_TM_AVG),0) END  BRDNG_TM_AVG
                            ,CASE WHEN TRUNC(AVG(USE_DST_AVG),0) = '0' THEN NULL ELSE TRUNC(AVG(USE_DST_AVG),0) END USE_DST_AVG 
                        FROM 시간거리_노선별통행
                        WHERE 1=1
                            AND SDATE = TO_DATE(#{dateStart} , 'YYYY-MM-DD')
	                        AND ANAL_AREA_CD = #{anal_area_cd}
	                        AND PROVIDER = #{provider}
	                        <if test="!cd_no[0].equals('00')">
                                AND CD_NO IN
                                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                                    #{arr}
                                </foreach>
                            </if>
                        GROUP BY 	SDATE
                                    ,OPRAT_DATE
                                    ,TO_CHAR(SDATE,'DY')
                                    ,ANAL_AREA_CD
                                    ,TFCMN
                                    ,ROUTE_ID
		                            ,ROUTE_NMA
		                            ,ROUTE_TYPE
		                            ,ROUTE_START
		                            ,ROUTE_END
                                    ,CD_NO
                    )			
                GROUP BY 	SDATE
                            ,OPRAT_DATE
                            ,DY
                            ,ANAL_AREA_CD
                            ,TFCMN
                            ,ROUTE_ID
                            ,ROUTE_NMA
                            ,ROUTE_TYPE
                            ,ROUTE_START
                            ,ROUTE_END
                            ,ROLLUP(CD_NO)
            )
        PIVOT
            (
                SUM(BRDNG_TM_AVG) 시간
                ,SUM(USE_DST_AVG) 거리
                FOR CD_NO IN ('01'일반 , '02'어린이, '03'청소년, '04'경로
                                    ,'05'장애인 , '06' 국가유공자, '07' 다자녀부모, '08' 동반
                                    ,'09' 대학생 , '10' 복지 , '11' 기타, '평균' 평균)
            )
        ORDER BY OPRAT_DATE, TFCMN, ROUTE_NMA, ROUTE_ID
	</select>


    
	<!-- ********************** 그래프 쿼리 **********************  -->
		
	<!--  1일 평균 통행시간거리_그래프 -->
	<select id ="graphTimeDistnResultListDay" parameterType="sVO" resultType="egovMap" fetchSize="1000">
		SELECT 
		    OPRAT_DATE
		    ,CD_NO 
		    ,NVL(TRUNC(AVG(CASE WHEN BRDNG_TM_AVG = '0' THEN NULL ELSE BRDNG_TM_AVG END),0),0) BRDNG_TM_AVG
			,NVL(TRUNC(AVG(CASE WHEN USE_DST_AVG = '0' THEN NULL ELSE USE_DST_AVG END),0),0) USE_DST_AVG
		FROM 시간거리_목적통행 
		WHERE 1 = 1
		    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
            AND ANAL_AREA_CD = #{anal_area_cd}
            AND PROVIDER = #{provider}
            <if test="tm==null || tm.equals('')">
                AND TM BETWEEN #{tmStart} AND #{tmEnd}
            </if>
            <if test="!cd_no[0].equals('00')">
                AND CD_NO IN
                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                    #{arr}
                </foreach>
            </if>
		    GROUP BY OPRAT_DATE
		    		,CD_NO
		ORDER BY OPRAT_DATE,CD_NO
	</select>
	
	<!--  목적통행 평균 통행시간거리_그래프 -->
	<select id ="graphTimeDistnResultListPurpose" parameterType="sVO" resultType="egovMap" fetchSize="1000">
		SELECT 
		    OPRAT_DATE
		    ,CD_NO 
		    ,NVL(TRUNC(AVG(CASE WHEN BRDNG_TM_AVG = '0' THEN NULL ELSE BRDNG_TM_AVG END),0),0) BRDNG_TM_AVG
			,NVL(TRUNC(AVG(CASE WHEN USE_DST_AVG = '0' THEN NULL ELSE USE_DST_AVG END),0),0) USE_DST_AVG
		FROM 시간거리_목적통행 
		WHERE 1 = 1
		    AND SDATE BETWEEN TO_DATE(#{dateStart} , 'YYYY-MM-DD') AND TO_DATE(#{dateEnd} , 'YYYY-MM-DD')
            AND ANAL_AREA_CD = #{anal_area_cd}
            AND PROVIDER = #{provider}
            <if test="tm==null || tm.equals('')">
                AND TM BETWEEN #{tmStart} AND #{tmEnd}
            </if>
            <if test="!cd_no[0].equals('00')">
                AND CD_NO IN
                <foreach collection="cd_no" item="arr" index="i" separator="," open="(" close=")">
                    #{arr}
                </foreach>
            </if>
		    GROUP BY OPRAT_DATE
		    		,CD_NO
		ORDER BY OPRAT_DATE,CD_NO
	</select>
	
	<!--  수단통행 평균 통행시간거리_그래프 -->
	<select id ="graphTimeDistnResultListMethod" parameterType="sVO" resultType="egovMap" fetchSize="1000">
	</select>
	
	<!--  노선별통행 평균 통행시간거리_그래프 -->
	<select id ="graphTimeDistnResultListRoute" parameterType="sVO" resultType="egovMap" fetchSize="1000">
	</select>
		
		
		
		
		
		
</mapper>
